---
  title: Osa 2 old
  exercise_page: true
  quiz_page: true
  published: false
---


<h2>Lyhyt aloituskysely</h2>

<p></p>

<%= partial 'partials/quiz', locals: { id: '5877687bd095c40004e4b185' } %>


<% partial 'partials/hint', locals: { name: 'Toisen osan tavoitteet' } do %>

  <p>
    Ymmärtää vuokaavioiden idean ja osaa piirtää vuokaavioita annetusta ohjelmasta. Hahmottaa ja tunnistaa ohjelman käyttämien muuttujien tilan ohjelman eri suoritusvaiheessa. Osaa soveltaa toistolausetta ohjelmointiongelmissa. Tuntee käsitteet metodi, parametri ja kutsupino. Osaa luoda ja käyttää parametrillisia metodeja.
  </p>

<% end %>

<% partial 'partials/hint', locals: { name: 'Muutama hyödyllinen vinkki ohjelmointiin NetBeansissa' } do %>

  <p>
    Tässä muutamia hyödyllisiä vinkkejä ohjelmointiin. Vinkit ovat sekä yleisiä että NetBeansin käyttöön liittyviä.
  </p>

  <ol>

    <li>

      <strong>Vältä punaista!</strong>

      <p>
	Kun NetBeans alleviivaa yhden tai useamman rivin punaisella värillä ja lähdekoodi-ikkunan vasemmassa ja oikeassa laidassa on punaista, NetBeans kertoo että ohjelmasi ei ole toimivassa tilassa. Ohjelmaasi ei voi myöskään tällöin suorittaa.
      </p>

      <img src="/img/material/non-compiling.png" alt="Kuva NetBeans-editorista, missä koodi on kääntymättömässä tilassa."/>

      <p>&nbsp;</p>

      <p>
	Ylläolevassa kuvassa NetBeans korostaa kahta virheellistä kohtaa. Ensimmäisessä kohdassa ehtolauseen ehdosta puuttuu mm. sulut. Toisessa kohdassa yritetään käyttää muuttujaa nimeltä <code>luk</code>, vaikkei sellaista ole.
      </p>

      <p>
	Kun punaisten kohtien määrä kasvaa, etkä saa ohjelmaasi toimimaan kuten haluat, pysähdy. Poista tekemiäsi muutoksia (ctrl + z) kunnes ohjelmointiympäristö ei valita lähdekoodissa olevista virheistä.
      </p>

      <p>
	Kun virheitä ei näy, hengitä ja kerro ääneen mitä haluat tehdä. Mikä on tavoitteesi ja minkälaisia pienempiä tavoitteita tavoitteesi saavuttamiseksi tulee tehdä? Etene pienin askelin ja toteuta ohjelmaasi osa kerrallaan. Ennen pitkää pienet osat tulevat sinulle tutuksi, ja opit yhä paremmin yhdistelemään niitä kokonaisiksi ohjelmiksi.
      </p>

      <img src="/img/material/non-compiling-2.png" alt="Kuva NetBeans-editorista, missä koodi kääntyy."/>

      <p>&nbsp;</p>

      <p>
	Tehtävien uudelleen alusta aloittamisessa ei ole mitään pahaa. Päinvastoin, kertaat tällöin ohjelman rakenteen toteuttamista, ja annat itsellesi aikaa oppia. Ohjelmakoodin lisääminen toimimattomaan ohjelmakoodiin johtaa harvoin toimivaan ratkaisuun.
      </p>

      <p>&nbsp;</p>

    </li>

    <li>

      <strong>Opettele hyödyntämään näppärää aaltosulkujen täydennystä</strong>

      <p>
	Eräs aloittelevan ohjelmoijan tyypillinen syy "punaisen koodin" lisääntymiselle on aaltosulkujen liikakäyttö tai niiden liian vähäinen käyttö. Jokaiselle aaltosululle tulee löytyä ohjelmasta pari, sillä ne määrittelevät lohkoja, joissa ohjelmakoodia suoritetaan.
      </p>

      <p>
	NetBeans auttaa tässä huomattavasti. Kun kirjoitat ehtolauseen, siihen liittyvän ehdon, sekä avaavan aaltosulkeen, koodi näyttää esimerkiksi seuraavalta:
      </p>

      <img src="/img/material/non-compiling-3.png" alt="Kuva NetBeans-editorista, missä yksi ylimääräinen avonainen aaltosulku."/>

      <p>&nbsp;</p>

      <p>
	Koodi ei käänny -- NetBeans vinkkaa, että virhe on viimeisellä rivillä. Syy on kuitenkin puuttuva aaltosulku.
      </p>

      <p>
	Jos painat heti avaavan aaltosulkeen kirjoittamisen jälkeen enteriä, NetBeans luo kirjoittamallesi aaltosululle parin.
      </p>

      <img src="/img/material/non-compiling-4.png" alt="Kuva NetBeans-editorista, missä yksi ylimääräinen avonainen aaltosulku."/>

      <p>
	Punaista ei näy ja voit edetä rauhassa.
      </p>

      <p>&nbsp;</p>

    </li>

    <li>

      <strong>Opettele käyttämään koodin automaattista täydennystä</strong>

      <p>
	Jos olet esitellyt ohjelmassasi muuttujan, ei sen nimeä tarvitse kirjoittaa joka kerta kokonaan.
      </p>

      <p>
	Kokeile mitä tapahtuu kun kirjoitat muuttujan ensimmäisen kirjaimen ja painat sen jälkeen yhtäaikaa ctrl ja välilyönti. <strong>HUOM:</strong> joissakin käyttöjärjestelmissä automaattinen täydennys saadaan aikaan painamalla yhtä aikaa ctrl, alt ja välilyönti.
      </p>

      <p>
	Allaolevassa esimerkissä ohjelmoija on luonut muuttujan <code>sukunimi</code>, jonka jälkeen hän kirjoittaa merkin <code>s</code> ja valitsee näppäinyhdistelmällä automaattisen täydennyksen.
      </p>

      <img src="/img/material/autocomplete-2.png" alt="Kuva NetBeans-editorista, demonstroidaan automaattista koodin täydennystä."/>

      <p>&nbsp;</p>

      <p>
	Muuttujan <code>sukunimi</code> voi valita NetBeansin tarjoamasta listasta.  NetBeans osaa täydentää muitakin nimiä sekä avainsanoja, esimerkiksi muuttujan tyypin <code>double</code> aikaansaamiseksi riittää kirjoittaa <code>w</code> sekä valita automaattinen täydennys.
      </p>

      <p>&nbsp;</p>

    </li>


    <li>

      <strong>Käytä lyhennettä sout</strong>

      <p>
	Muista että saat tehtyä tulostuskomennon <code>System.out.println("")</code> kirjoittamalla <code>sout</code> ja painamalla <em>tabulaattoria</em> eli q:n vasemmalla puolella olevaa näppäintä.
      </p>

    </li>

  </ol>

<% end %>



<% partial 'partials/material_heading' do %>
  Toistaminen
<% end %>

<p>
  Tietokone on erittäin tehokas asioiden toistaja.
</p>


<% partial 'partials/material_sub_heading' do %>
  Toistolause ja ikuinen toisto
<% end %>

<p>
  Toistolause sisältää lausekkeen, jonka perusteella päätellään jatketaanko toistoa, sekä lohkon, joka sisältää toistettavan lähdekoodin. Toistolauseen muoto on seuraava.
</p>

<% partial 'partials/code_highlight' do %>
  while (lauseke) {
      // lohkon sisältö
  }
<% end %>

<p>
  Lausekkeen arvon tulee evaluoitua totuusarvoiseksi muuttujaksi. Jos lausekkeen arvoksi asettaa arvon <code>true</code>, toistoa jatketaan ikuisesti. Seuraava ohjelma tulostaa merkkijonoa <em>osaan ohjelmoida!</em> ikuisesti eli "äärettömän monta kertaa":
</p>

<% partial 'partials/code_highlight' do %>
  while (true) {
      System.out.println("osaan ohjelmoida!");
  }
<% end %>

<p>
  Ikuisen toiston sisältävä ohjelma ei sammu itsestään. Ohjelman sammutus tapahtuu NetBeansissa tulostusikkunan vasemmalla puolella olevaa punaista nappia painamalla.
</p>


<div class="typonator-widget">
  <div class="typonator-model-source">
    public class Esimerkki {
        public static void main(String[] args) {
            // Tänne kirjoitetaan ohjelman käyttämät lauseet
            while (true) {
                System.out.println("Uudestaan!");
            }
        }
    }
  </div>
  <div class="typonator-template-source">
    public class Esimerkki {
        public static void main(String[] args) {
            // Tänne kirjoitetaan ohjelman käyttämät lauseet
            // MARK
        }
    }
  </div>
</div>

<% partial 'partials/material_sub_heading' do %>
  Toistolauseen päättäminen
<% end %>

<p>
  Toistolauseen saa päätettyä komennolla <code>break</code>. Kun tietokone suorittaa komennon <code>break</code>, siirtyy se toistolauseen lohkoa seuraavan komennon suorittamiseen.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  while (true) {
      System.out.println("osaan ohjelmoida!");

      System.out.print("jatketaanko (positiivinen luku jatkaa)? ");
      int komento = Integer.parseInt(lukija.nextLine());
      if (komento &lt;= 0) {
          break;
      }
  } // lohko päättyy

  // toistolauseen lohkoa seuraava komento
  System.out.println("kiitos ja kuulemiin.");
<% end %>


<p>
  Yllä olevassa esimerkissä toisto etenee siten että ensin tulostuu <em>osaan ohjelmoida!</em> ja tämän jälkeen ohjelma kysyy käyttäjältä jatketaanko vielä. Jos käyttäjä syöttää nollan tai negatiivisen luvun, suoritetaan komento <code>break</code>. Tällöin suoritus siirtyy toistolausetta seuraavaan komentoon, joka tulostaa merkkijonon <em>kiitos ja kuulemiin.</em>
</p>


<% partial 'partials/sample_output' do %>
  osaan ohjelmoida!
  jatketaanko (negatiivinen luku lopettaa)? <font color="red">5</font>
  osaan ohjelmoida!
  jatketaanko (negatiivinen luku lopettaa)? <font color="red">2</font>
  osaan ohjelmoida!
  jatketaanko (negatiivinen luku lopettaa)? <font color="red">-1</font>
  kiitos ja kuulemiin.
<% end %>

<% partial 'partials/exercise', locals: { name: 'Uudestaan!' } do %>


  <p>
    Kirjoita edellä olevaa toistolause-esimerkkiä mukaillen ohjelma, joka kysyy käyttäjältä lukuja kunnes käyttäjä syöttää luvun 4.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luku <font color="red">5</font>
    Syötä luku <font color="red">744</font>
    Syötä luku <font color="red">22</font>
    Syötä luku <font color="red">-1</font>
    Syötä luku <font color="red">4</font>
  <% end %>

<% end %>

<% partial 'partials/material_sub_heading' do %>
  Muuttujat toistolauseen ulkopuolella
<% end %>

<p>
  Toistolauseissa halutaan usein laskea asioita. Tällöin ohjelmoijan tulee määritellä laskettavien asioiden ylläpitoon muuttuja ennen toistolauseen alkua, jotta muuttujan arvoa voidaan päivittää toistolauseessa. Alla olevassa esimerkissä ohjelma laskee syötettyjen ykkösten lukumäärän. Syötteiden lukeminen lopetetaan kun käyttäjä syöttää luvun 0.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  int ykkosia = 0;

  while (true) {
      System.out.print("Syötä luku (0 lopettaa): ");
      int luku = Integer.parseInt(lukija.nextLine());
      if (luku == 0) {
          break;
      }

      if (luku == 1) {
          ykkosia = ykkosia + 1;
      }
  }

  System.out.println("Ykkösiä yhteensä: " + ykkosia);
<% end %>


<% partial 'partials/sample_output' do %>
  Syötä luku <font color="red">1</font>
  Syötä luku <font color="red">2</font>
  Syötä luku <font color="red">1</font>
  Syötä luku <font color="red">-1</font>
  Syötä luku <font color="red">0</font>
  Ykkösiä yhteensä: 2
<% end %>


<% partial 'partials/exercise', locals: { name: 'Summaaja' } do %>

  <p>
    Tehtäväpohjassa on toistolausetta käyttävä ohjelma, joka lukee käyttäjältä viisi lukua ja tulostaa niiden summan. Muokkaa ohjelmaa siten, että ohjelma voi lukea lähes rajattoman määrän lukuja: lukeminen tulee lopettaa vasta kun käyttäjä syöttää luvun 0.
  </p>

<% end %>


<% partial 'partials/material_heading' do %>
  Yhteenveto
<% end %>


<p>
  Ensimmäinen osa käsitteli ohjelmoinnin ja tietokoneiden toiminnan kannalta oleellisia ydinasioita. Näitä ovat muuttujat ja tieto, laskeminen, syötteen käsittely ja lukeminen, vertailu ja päätösten tekeminen sekä toistaminen.
</p>

<p>
  Tehdään ensimmäisen osan loppuun vielä ohjelma, missä kerrataan ydinasioita.
</p>

<p>
  <em>
    Paroni von Münchhausen oli Saksan Hannoverissa syntynyt 1700-luvulla elänyt herrasmies. Hänet muistetaan ensisijaisesti sotakertomuksistaan, joista yksi liittyi tykinkuulalla lentämiseen. Oletetaan tässä, että Paronin istuimena käyttämä kuula ammuttiin tykillä suoraan ylöspäin ja tykinkuulan lähtönopeus on 1700-luvulle tyypillinen noin 400 metriä sekunnissa. Kirjoitetaan ohjelma, joka kertoo Paronin korkeuden ja nopeuden sekunti sekunnilta. Ohjelman suorituksen tulee loppua kun Paroni palaa takaisin maahan. Tämän jälkeen ohjelman tulee vielä kertoa suurin Paronin saavuttama korkeus.
  </em>
</p>

<p>
  Yllä kuvatun ongelman ratkaisu kannattaa tehdä useammassa osassa. Tarvitsemme toistolauseen, missä korkeuden muutosta tarkastellaan sekunti sekunnilta. Tarvitsemme ohjelmaan myös Paronin lentoon vaikuttavan painovoiman. Lopulta tarvitsemme muuttujan, mitä käytetään suurimman korkeuden tarkasteluun.
</p>

<p>
  Tehdään ensin ikuisesti jatkuva ohjelma, joka tulostaa korkeuden sekunti sekunnilta. Tässä kohdassa emme vielä ota painovoimaa huomioon emmekä pyri selvittämään suurinta korkeutta.
</p>

<% partial 'partials/code_highlight' do %>
  int sekunteja = 0;
  int nopeus = 400;
  int korkeus = 0;

  System.out.println("Sekunnit: " + sekunteja);
  System.out.println("Nopeus: " + nopeus);
  System.out.println("Korkeus: " + korkeus);

  while (true) {
      korkeus = korkeus + nopeus;
      sekunteja = sekunteja + 1;

      System.out.println("");
      System.out.println("Sekunnit: " + sekunteja);
      System.out.println("Nopeus: " + nopeus);
      System.out.println("Korkeus: " + korkeus);
  }
<% end %>

<% partial 'partials/sample_output' do %>
  Sekunnit: 0
  Nopeus: 400
  Korkeus: 0

  Sekunnit: 1
  Nopeus: 400
  Korkeus: 400

  Sekunnit: 2
  Nopeus: 400
  Korkeus: 800

  ...
<% end %>

<p>
  Ensimmäinen osa toimii toivotulla tavalla. Lisätään seuraavaksi ohjelmaan painovoima.
</p>

<p>
  Saatamme muistaa fysiikan oppitunneilta, että <a href="https://fi.wikipedia.org/wiki/Painovoima" target="_blank">maan painovoima</a> on noin 9,81 m/s<sup>2</sup>. Käytännössä siis painovoima hidastaa tykinkuulan (ja Paronin) nopeutta joka sekunti noin 9,81 metrillä -- ohjelmallisesti tämän voi toteuttaa vähentämällä nopeus-muuttujasta 9.81 jokaisella toiston kierroksella.
</p>

<% partial 'partials/code_highlight' do %>
  while (true) {
      korkeus = korkeus + nopeus;
      sekunteja = sekunteja + 1;
      nopeus = nopeus - 9.81;
      // ...
  }
<% end %>

<p>
  <em>Mutta!</em> Muuttuja <code>nopeus</code> on kokonaisluku. Emme voi vähentää kokonaisluvusta liukulukua. Muutetaan ohjelmaa siten, että muuttuja nopeus on liukuluku -- vastaava muutos tehdään muuttujalle korkeus, sillä myös siihen lisätään liukuluku.
</p>

<% partial 'partials/code_highlight' do %>
  int sekunteja = 0;
  double nopeus = 400;
  double korkeus = 0;

  System.out.println("Sekunnit: " + sekunteja);
  System.out.println("Nopeus: " + nopeus);
  System.out.println("Korkeus: " + korkeus);

  while (true) {
      korkeus = korkeus + nopeus;
      sekunteja = sekunteja + 1;
      nopeus = nopeus - 9.81;

      System.out.println("");
      System.out.println("Sekunnit: " + sekunteja);
      System.out.println("Nopeus: " + nopeus);
      System.out.println("Korkeus: " + korkeus);
  }
<% end %>

<% partial 'partials/sample_output' do %>
  Sekunteja: 0
  Nopeus: 400.0
  Korkeus: 0.0

  Sekunnit: 1
  Nopeus: 390.19
  Korkeus: 400.0

  Sekunnit: 2
  Nopeus: 380.38
  Korkeus: 790.19

  ...
<% end %>

<p>
  Ohjelmassa on nyt sekä sekuntikohtainen nopeuden ja korkeuden tarkastelu sekä painovoima. Ohjelman suoritus ei kuitenkaan koskaan lopu.
</p>

<p>
  Lisätään toistolauseeseen lopetusehto, missä toistolauseesta poistutaan jos korkeus on negatiivinen. Tämä tarkoittaa käytännössä sitä, että Paroni on päässyt takaisin maan pinnalle.
</p>

<% partial 'partials/code_highlight' do %>
  int sekunteja = 0;
  double nopeus = 400;
  double korkeus = 0;

  System.out.println("Sekunnit: " + sekunteja);
  System.out.println("Nopeus: " + nopeus);
  System.out.println("Korkeus: " + korkeus);

  while (true) {
      if (korkeus &lt; 0) {
          break;
      }

      korkeus = korkeus + nopeus;
      sekunteja = sekunteja + 1;
      nopeus = nopeus - 9.81;

      System.out.println("");
      System.out.println("Sekunnit: " + sekunteja);
      System.out.println("Nopeus: " + nopeus);
      System.out.println("Korkeus: " + korkeus);
  }
<% end %>

<% partial 'partials/sample_output' do %>
  Sekunteja: 0
  Nopeus: 400.0
  Korkeus: 0.0

  Sekunnit: 1
  Nopeus: 390.19
  Korkeus: 400.0

  Sekunnit: 2
  Nopeus: 380.38
  Korkeus: 790.19

  ... monta riviä

  Sekunnit: 83
  Nopeus: -414.23000000000013
  Korkeus: -183.4300000000065
<% end %>

<p>
  Ohjelma käy nyt sekunti sekunnilta Paronin korkeuden ja nopeuden. Edellä annetun esimerkkitulosteen perusteella Paroni palaa maahan hieman yli 400 metrin sekuntivauhtia (eli hieman yli 1400 kilometriä tunnissa).
</p>

<p>
  Selvitetään vielä lopuksi Paronin lennon suurin korkeus. Haluamme tulostaa korkeuden ohjelman lopussa, eli toistolauseen jälkeen. Tarvitsemme käytännössä uuden muuttujan, jonka tehtävänä on säilöä suurin korkeus. Muuttujan arvo päivitetään tarvittaessa toistolauseessa aina korkeuden päivityksen jälkeen.
</p>

<% partial 'partials/code_highlight' do %>
  double suurinkorkeus = 0;

  int sekunteja = 0;
  double nopeus = 400;
  double korkeus = 0;

  System.out.println("Sekunnit: " + sekunteja);
  System.out.println("Nopeus: " + nopeus);
  System.out.println("Korkeus: " + korkeus);

  while (true) {
      if (korkeus &lt; 0) {
          break;
      }

      korkeus = korkeus + nopeus;
      sekunteja = sekunteja + 1;
      nopeus = nopeus - 9.81;

      if (korkeus &gt; suurinkorkeus) {
          suurinkorkeus = korkeus;
      }

      System.out.println("");
      System.out.println("Sekunnit: " + sekunteja);
      System.out.println("Nopeus: " + nopeus);
      System.out.println("Korkeus: " + korkeus);
  }

  System.out.println("");
  System.out.println("Suurin korkeus: " + suurinkorkeus);
<% end %>

<% partial 'partials/sample_output' do %>
  Sekunteja: 0
  Nopeus: 400.0
  Korkeus: 0.0

  Sekunnit: 1
  Nopeus: 390.19
  Korkeus: 400.0

  Sekunnit: 2
  Nopeus: 380.38
  Korkeus: 790.19

  ... monta riviä

  Sekunnit: 83
  Nopeus: -414.23000000000013
  Korkeus: -183.4300000000065

  Suurin korkeus: 8355.8
<% end %>

<p>
  Paroni olisi päässyt esimerkissämme siis lähes 83 sekunnin lentomatkalle sekä yli kahdeksan kilometrin korkeuteen.
</p>


<% partial 'partials/exercise', locals: { name: 'Tykinkuula' } do %>

  <p>
    Tässä tehtävässä luot edellä kuvatun ohjelman suoraan ylöspäin ammutun tykinkuulan suurimman korkeuden selvittämiseen. Ohjelmassa on kuitenkin muutamia parannuksia: käyttäjä voi syöttää sekä lähtönopeuden että painovoiman. Tämän lisäksi tulostuksessa arvot on eroteltu sarkaimilla, mikä mahdollistaa niiden helpon siirtämisen esimerkiksi taulukkolaskentaohjelmiin.
  </p>

  <p>
    Tässä muutamia vinkkejä tehtävän tekemisen helpottamiseen.
  </p>


  <p>
    Vinkki 1. Saat luettua käyttäjältä liukuluvun komennolla <code>Double.parseDouble(lukija.nextLine())</code>. Ohjelmassa tämä tapahtuu seuraavasti.
  </p>

  <% partial 'partials/code_highlight' do %>
    Scanner lukija = new Scanner(System.in);

    System.out.println("Syötä liukuluku");
    double luku = Double.parseDouble(lukija.nextLine());
    System.out.println("Syötetty: " + luku);
  <% end %>

  <% partial 'partials/sample_output' do %>
    Syötä liukuluku
    <font color="red">8.91</font>
    Syötetty: 8.91
  <% end %>


  <p>
    Vinkki 2. Saat tulostettua arvoja sarkaimilla erotettuna erikoismerkin "\t" avulla.
  </p>

  <% partial 'partials/code_highlight' do %>
    int sekunteja = 0;
    double korkeus = 0;
    double suurinkorkeus = 0;

    System.out.println(sekunteja + "\t" + korkeus + "\t" + nopeus);
  <% end %>

  <% partial 'partials/sample_output' do %>
    0    0.0    0.0
  <% end %>

  <p>
    Tehtävänäsi on siis toteuttaa ohjelma, joka kysyy käyttäjältä tykinkuulan lähtönopeutta ja painovoimaa. Ohjelman tulee tulostaa tykinkuulan korkeus sekunti sekunnilta kunnes tykinkuula palaa maahan. Ohjelman tulee lisäksi ohjelman lopussa kertoa tykinkuulan suurin korkeus.
  </p>

  <p>
    Ohjelman tulostuksen tulee olla seuraavanlainen. Alla olevassa esimerkissä lähtönopeudeksi on syötetty 42.0 ja painovoimaksi 9.81.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä tykinkuulan lähtönopeus:
    <font color="red">42.0</font>
    Syötä painovoima:
    <font color="red">9.81</font>

    0	0.0	42.0
    1	42.0	32.19
    2	74.19	22.379999999999995
    3	96.57	12.569999999999995
    4	109.13999999999999	2.7599999999999945
    5	111.89999999999998	-7.050000000000006
    6	104.84999999999997	-16.860000000000007
    7	87.98999999999995	-26.67000000000001
    8	61.31999999999994	-36.48000000000001
    9	24.839999999999932	-46.29000000000001

    Tykinkuulan suurin korkeus oli 111.89999999999998
  <% end %>

  <p>
    Alla olevassa esimerkissä taas oletetaan, että lähtönopeus on 15 ja painovoima 3.5.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä tykinkuulan lähtönopeus:
    <font color="red">15</font>
    Syötä painovoima:
    <font color="red">3.5</font>

    0	0.0	15.0
    1	15.0	11.5
    2	26.5	8.0
    3	34.5	4.5
    4	39.0	1.0
    5	40.0	-2.5
    6	37.5	-6.0
    7	31.5	-9.5
    8	22.0	-13.0
    9	9.0	-16.5

    Tykinkuulan suurin korkeus oli 40.0
  <% end %>

  <p>
    Huom! Vaikka edellä on syötettynä lähtönopeudeksi kokonaisluku, voi sen silti ohjelmassa toteuttaa niin, että luku asetetaan desimaalilukuun. Komento <code>Double.parseDouble(lukija.nextLine())</code> siis toimi, vaikka käyttäjä syöttäisi kokonaisluvun.
  </p>

  <p>
    Kun ohjelman suoritus on valmis, voit kokeilla lukujen syöttämistä taulukkolaskentaohjelmaan. Alla oleva tykinkuulan korkeuden kuvaaja on luotu edellisen esimerkin tulosteesta Google Driven avulla.
  </p>

  <img class="naytto" src="/img/tykinkuula.png"/>


<% end %>



<% partial 'partials/material_heading' do %>
  Vuokaaviot ja ohjelman suorituksen visualisointi
<% end %>


<p>
  Ensimmäisessä osassa tutustuttiin neljään ohjelmoinnin pääteemaan. Tiedon tallentamiseen ja muistamiseen (muuttujat), interaktiivisten ohjelmien luomiseen (syötteen lukeminen käyttäjältä), valintojen tekemiseen ohjelmassa (ehtolauseet) sekä asioiden toistamiseen (toistolauseet).
</p>

<p>
  Tutustutaan seuraavaksi vuokaavioihin. <strong>Vuokaavio</strong> on kaaviotyyppi, jonka avulla voidaan kuvata (mm.) tietokoneohjelman suoritusta visuaalisessa muodossa. Vuokaavio koostuu suorituksen alku- ja loppupisteistä (ellipsit), suoritettavista lauseista (suorakulmiot), tulostus- ja lukulauseista (suunnikkaat) sekä päätöksenteosta (salmiakki). Nuolilla kuvataan ohjelman suorituksen kulkua.
</p>

<p>
  Alla on esimerkkinä muutamia ohjelmia sekä niihin liittyviä vuokaavioita.
</p>


<% partial 'partials/material_sub_heading' do %>
  Vuokaavio ja ehtolauseet
<% end %>

<p>
  Alla on kuvattuna kaksi esimerkkiä vuokaavion käytöstä ehtolauseiden kanssa.
</p>


<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  int luku = Integer.parseInt(lukija.nextLine());

  if (luku == 0) {
      System.out.println("Luettu luku oli 0");
  } else {
      System.out.println("Luettu luku ei ollut 0");
  }
<% end %>

<img src="/img/vuokaavio1.png" alt='Tehty osoitteessa flowchart.js.org. Koodi: st=>start: Alku

				    op1=>inputoutput: lue luku
				    cond=>condition: luku == 0
				    cond2=>condition: luku > 5

				    io=>inputoutput: "Luettu luku oli 0"

				    io2=>inputoutput: "Luettu luku ei ollut 0"

				    e=>end: Loppu

				    st->op1->cond
				    cond(yes)->io->e
				    cond(no)->io2->e'></img>


<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  int luku = Integer.parseInt(lukija.nextLine());

  if (luku == 0) {
      System.out.println("Luettu luku oli 0");
  } else if (luku &gt; 5) {
      System.out.println("Luettu luku oli suurempi kuin 5");
  } else {
      System.out.println("Luettu luku ei ollut 0 eikä suurempi kuin 5");
  }
<% end %>

<img src="/img/vuokaavio2.png" alt='Tehty osoitteessa flowchart.js.org. Koodi: st=>start: Alku

				    op1=>inputoutput: lue luku
				    cond=>condition: luku == 0
				    cond2=>condition: luku > 5

				    io=>inputoutput: "Luettu luku oli 0"

				    io2=>inputoutput: "Luettu luku ei ollut 0 eikä suurempi kuin 5"

				    io3=>inputoutput: "Luettu luku oli suurempi kuin 5"

				    e=>end: Loppu

				    st->op1->cond
				    cond(yes)->io->e
				    cond(no)->cond2

				    cond2(yes)->io3->e
				    cond2(no)->io2->e'></img>



<% partial 'partials/material_sub_heading' do %>
  Vuokaavio toistolauseiden kanssa
<% end %>


<p>
  Alla on kuvattuna kaksi esimerkkiä vuokaavion käytöstä toistolauseiden kanssa.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  while (true) {
      System.out.print("Jatketaanko (luku 1 jatkaa)? ");
      int komento = Integer.parseInt(lukija.nextLine());

      if (komento != 1) {
          break;
      }

      System.out.println("Jatketaan!");
  }

  // toistolauseen lohkoa seuraava komento
  System.out.println("Kiitos!");
<% end %>


<img src="/img/vuokaavio3.png" alt='Tehty osoitteessa Flowchart.js.org. Koodi: st=>start: Alku
				    e=>end: Loppu

				    io2=>inputoutput: "Jatketaanko (luku 1 jatkaa)?"
     io3=>inputoutput: "Jatketaan!"
io4=>inputoutput: "Kiitos!"

io5=>inputoutput: lue komento

cond=>condition: komento != 1

st->io2->io5->cond
cond(yes)->io4->e

cond(no)->io3->io2'></img>


<% partial 'partials/code_highlight' do %>
  int luku = 0;

  while (true) {
      luku++;
      if (luku &gt; 10) {
          break;
      }

      System.out.println("Luku nyt: " + luku);
  }

  // toistolauseen lohkoa seuraava komento
  System.out.println("Kiitos!");
<% end %>


<img src="/img/vuokaavio4.png" alt='Tehty osoitteessa Flowchart.js.org. Koodi: st=>start: Alku
				    e=>end: Loppu

				    op=>operation: luku=0
				    op2=>operation: luku++

				    cond=>condition: luku > 10

				    io2=>inputoutput: "Luku nyt: " + luku
				    io4=>inputoutput: "Kiitos!"

				    st->op->op2->cond
				    cond(yes)->io4->e
				    cond(no)->io2->op2'></img>


<p>
  Kuten huomaat, vuokaavioon ei merkitä jokaista ohjelman lausetta tai lauseketta. Kaavion yksityiskohtaisuus on myös tekijän vastuulla -- esimerkiksi yllä olevan ohjelman voisi toteuttaa useammalla eri tavalla.
</p>


<%= partial 'partials/quiz', locals: { id: '5a57bcce574f0b000439a32d' } %>


<% partial 'partials/material_heading' do %>
  Muuttuvat muuttujat
<% end %>

<p>
  Syvennytään tässä vielä tarkemmin muuttujien sielunelämään, niiden olemassaoloon sekä niissä olevien arvojen muuttamiseen.
</p>


<% partial 'partials/material_sub_heading' do %>
  Muuttujan arvon muuttaminen
<% end %>

<p>
  Muuttujia käytetään tiedon säilyttämiseen sekä tiedon myöhempään noutamiseen. Muuttujan esittely tapahtui kertomalla ensin muuttujan tyyppi, esimerkiksi kokonaisluku (<code>int</code>), jota seuraa muuttujan nimi, esimerkiksi <code>luku</code> -- yhdessä <code>int luku</code>. Muuttujan esittelyä seuraa tyypillisesti sijoitusoperaatio, minkä avulla muuttujalle asetetaan arvo.
</p>

<p>
  Esimerkiksi lause <code>int luku = 5;</code> luo kokonaislukumuuttujan nimeltä luku ja asettaa siihen arvon 5.
</p>

<p>
  Olemassaolevan muuttujan arvoa voi käyttää uuden muuttujan esittelyssä ja arvon asetuksessa. Alla olevassa esimerkissä luodaan ensin muuttuja nimeltä pituus, jonka jälkeen luodaan muuttuja paino. Muuttujaan paino asetetaan lausekkeen <code>pituus / 2</code> evaluaation tulos, eli puolet muuttujan pituus arvosta.
</p>


<% partial 'partials/code_highlight' do %>
int pituus = 166;
int paino = pituus / 2;

System.out.println(paino);
<% end %>


<% partial 'partials/sample_output' do %>
83
<% end %>

<p>
  Muuttujan arvoa voidaan muuttaa ohjelman aikana eli muuttujaan voi asettaa myös uuden arvon. Tämä onnistuu sijoituslauseen avulla. Seuraavassa esitellään ensin muuttuja <code>ika</code>, jolle asetetaan alkuarvoksi 1. Tämän jälkeen muuttujan <code>ika</code> arvoa kasvatetaan yhdellä:
</p>

<% partial 'partials/code_highlight' do %>
int ika = 1;

System.out.println(ika);
ika = ika + 1;    // muuttujan ika uusi arvo on ika-muuttujan vanha arvo plus yksi
System.out.println(ika);
<% end %>

<% partial 'partials/sample_output' do %>
1
2
<% end %>


<p>
  Tarkastellaan lausetta <code>ika = ika + 1;</code> tarkemmin. Lause <code>ika = ika + 1;</code> kasvattaa muuttujan <code>ika</code> arvoa yhdellä. Käytännössä komennon suoritus tapahtuu siten, että ensin suoritetaan yhtäsuuruusmerkin oikealla puolella oleva lauseke <code>ika + 1</code>. Tässä tietokone etsii ensin muuttujaa <code>ika</code>. Koska muuttuja on esitelty aiemmin, se löytyy (sen arvo on <code>1</code>). Lausekkeen <code>ika + 1</code> muuttujan <code>ika</code> paikalle asetetaan arvo <code>1</code>. Lauseke on nyt muotoa <code>1 + 1</code>, jonka tietokone osaa laskea: tulokseksi tulee <code>2</code>. Lause on tämän jälkeen kokonaisuudessaan <code>ika = 2</code>, mikä tarkoittaa "aseta muuttujan ika arvoksi 2".
</p>

<p>
  Muuttujan arvon kasvattaminen yhdellä onnistuu myös seuraavasti:
</p>

<% partial 'partials/code_highlight' do %>
int ika = 1;

System.out.println(ika);
ika++;                     // tarkoittaa samaa kuin ika = ika + 1;
System.out.println(ika);
<% end %>

<p>
  Lause <code>ika++</code> muuntuu ohjelmaa suoritettaessa muotoon <code>ika = ika + 1;</code>. Ohjelman tulostus on sama kuin edellisessä:
</p>

<% partial 'partials/sample_output' do %>
1
2
<% end %>


<p>Toinen esimerkki:</p>

<% partial 'partials/code_highlight' do %>
int pituus = 100;

System.out.println(pituus);
pituus = pituus - 50;
System.out.println(pituus);
pituus = pituus * 2;
System.out.println(pituus);
pituus = pituus / 4;
System.out.println(pituus);
pituus--;                   // sama kuin pituus = pituus - 1;
System.out.println(pituus);
<% end %>

<% partial 'partials/sample_output' do %>
100
50
100
25
24
<% end %>



<% partial 'partials/material_sub_heading' do %>
  Muuttujan olemassaolo
<% end %>


<p>
  Muuttujan esittely ei takaa sen olemassaoloa kaikkialla ohjelmassa. Muuttujan olemassaoloon liittyy oleellisesti kaksi sääntöä: muuttujaa ei ole olemassa ennen kuin se on esitelty, ja muuttuja ei ole olemassa aaltosulkeidensa ulkopuolella.
</p>


<% partial 'partials/material_sub_sub_heading' do %>
  Muuttujan olemassaolo liittyy muuttujan esittelyyn
<% end %>


<p>
  <strong>Muuttuja on olemassa vasta siitä lähtien kun muuttuja esitellään</strong>, eikä sitä voi käyttää ennen kuin se on esitelty. Muuttujan esittely varaa ohjelman muistista muuttujalle tilan, asettaa tilalle nimen, sekä -- jos asetuslausetta käytetään -- asettaa muuttujalle arvon. Tämä nimetty tila on olemassa vasta muuttujan esittelyn jälkeen.
</p>

<% partial 'partials/code_highlight' do %>
  // ei toimi sillä muuttujaa luku ei vielä tunneta!
  if (luku &gt; 10) {
      System.out.println("Jee!");
  }

  int luku = 12;
<% end %>


<% partial 'partials/code_highlight' do %>
  int luku = 12;

  // toimii, sillä muuttuja esitellään ennen sen käyttöä
  if (luku &gt; 10) {
      System.out.println("Jee!");
  }
<% end %>

<% partial 'partials/sample_output' do %>
  Jee!
<% end %>


<% partial 'partials/material_sub_sub_heading' do %>
  Muuttujan olemassaolo liittyy aaltosulkeisiin
<% end %>


<p>
  <strong>Muuttuja on olemassa vain niiden aaltosulkujen sisällä missä muuttuja on esitelty</strong>, eikä muuttujaan pääse käsiksi aaltosulkujen ulkopuolelta. Esimerkiksi, jos ehtolauseeseen liittyvässä lohkossa (aaltosuluilla rajattu alue) esitellään muuttuja, on kyseinen muuttuja on käytössä vain kyseisen lohkon sisällä.
</p>

<% partial 'partials/code_highlight' do %>
  int luku = 12;

  if (luku &gt; 10) {
      System.out.println("Jee!");
      int tulostus = 52;
  }

  // ei toimi sillä tulostus on olemassa vain ehtolauseen lohkojen sisällä
  System.out.println(tulostus);
<% end %>

<% partial 'partials/code_highlight' do %>
  int luku = 12;
  int tulostus = 0;

  if (luku &gt; 10) {
      System.out.println("Jee!");
      tulostus = 52;
  }

  System.out.println(tulostus); // toimii!
<% end %>

<% partial 'partials/sample_output' do %>
  Jee!
  52
<% end %>

<p>
  Toisen säännön yhteydessä myös ensimmäinen sääntö pätee. Muuttuja on olemassa vain sen esittelyhetkestä eteenpäin, ei koskaan ennen esittelyhetkeä.
</p>


<%= partial 'partials/quiz', locals: { id: '5a57bcce574f0b000439a32e' } %>

<%= partial 'partials/quiz', locals: { id: '5a6f44cde8f03f0dec847a83' } %>



<% partial 'partials/exercise', locals: { name: 'Positiivisen luvun lisääminen' } do %>


  <p>
    Kaverisi on hahmotellut summaamiseen ja ehtolauseen toimintaan liittyvää testiohjelmaa. Testiohjelmassa ohjelman alussa luettuun lukuun lisätään käyttäjältä luettu toinen luku. Luvun lisäämisen tulee tapahtua vain jos toisena luettu luku on positiivinen.
  </p>

  <p>
    Ohjelma ei tällä hetkellä kuitenkaan toimi ihan toivotusti ja siinä näkyy punaista. Kaverisi ohjelma näyttää seuraavalta:
  </p>

  <% partial 'partials/code_highlight' do %>
    Scanner lukija = new Scanner(System.in);
    int summa = Integer.parseInt(lukija.nextLine());

    if (luettu &gt; 0) {
        summa += summa + luettu;
    }

    int luettu = Integer.parseInt(lukija.nextLine());

    System.out.println("Summa: " + summa);
  <% end %>

  <p>
    Korjaa kaverisi ohjelma. Alla esimerkkitulosteita toimivasta ohjelmasta.
  </p>

  <% partial 'partials/sample_output' do %>
    <font color="red">32</font>
    <font color="red">7</font>
    Summa: 39
  <% end %>


  <% partial 'partials/sample_output' do %>
    <font color="red">9</font>
    <font color="red">-3</font>
    Summa: 9
  <% end %>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Työntekijän eläkevakuutus' } do %>

  <p>
    Työntekijän eläkevakuutus (TyEL) on lakisääteinen ja pakollinen maksu, jolla rahoitetaan suurin osa nykyisistä ja tulevista työeläkkeistä. Työntekijän eläkevakuutuksen maksamisesta vastaa sekä työnantaja että työntekijä: <a href="http://www.etk.fi/uutinen/tyoelakemaksut-vuonna-2017/" target="_blank">Eläketurvakeskuksen mukaan</a> työnantajan maksama TyEL-maksu on vuonna 2017 noin 18% työntekijän palkasta, kun taas työntekijä maksaa palkastaan TyEL-maksua noin 6%.
  </p>

  <p>
    Työnantaja maksaa osuutensa bruttopalkan lisäksi, kun taas työntekijän maksama osuus otetaan bruttopalkasta (eli palkasta ennen ennakonpidätyksiä, vakuutusmaksuja ja muita vähennyksiä).
  </p>

  <p>
    Toteuta ohjelma, joka kertoo TyEL-kulut annetulle bruttopalkalle. Ohjelman tulee kertoa annetun bruttopalkan perusteella työnantajan maksut sekä palkasta tehtävät pidätykset. Käytä edellä annettuja vuoden 2017 arvioita (työnantajan osuus 18% ja työntekijän osuus 6%).
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä bruttopalkka: <font color="red">800</font>
    Työnantaja maksaa TyEL-maksuja: 144
    Työntekijän kustannus työnantajalle vähintään: 944

    Työntekijä maksaa TyEL-maksuja: 48
    Työntekijän palkka TyEL-maksun jälkeen: 752

    TyEL-kulut yhteensä: 192
  <% end %>


  <% partial 'partials/sample_output' do %>
    Syötä bruttopalkka: <font color="red">1000</font>
    Työnantaja maksaa TyEL-maksuja: 180
    Työntekijän kustannus työnantajalle vähintään: 1180

    Työntekijä maksaa TyEL-maksuja: 60
    Työntekijän palkka TyEL-maksun jälkeen: 940

    TyEL-kulut yhteensä: 240
  <% end %>

  <p>
    <em>
      Tulostuksessa saa halutessaan käyttää myös desimaalilukuja.
    </em>
  </p>

<% end %>


<% partial 'partials/material_sub_heading' do %>
  Sijoitusoperaatiot
<% end %>

<p>
  Olemassaolevan muuttujan arvon muuttaminen on yleinen operaatio, joten sitä varten on olemassa myös muutamia näppäinpainalluksia säästävät erityiset sijoitusoperaatiot.
</p>

<% partial 'partials/code_highlight' do %>
int pituus = 100;

pituus += 10;  // sama kuin pituus = pituus + 10;
pituus -= 50;  // sama kuin pituus = pituus - 50;
<% end %>

<p>
  Olemassaolevan muuttujan arvoa muuttava sijoitusoperaatio merkitään <code>muuttuja muutostyyppi= muutos</code>, esimerkiksi <code>muuttuja += 5</code>. Huomaa, että muuttujan tulee olla olemassa ennen kuin sille voidaan asettaa arvo. Muuttuja tulee siis aina esitellä ennen kuin se on käytettävissä. Muuttujan esittely tapahtuu kertomalla muuttujan tyyppi ja nimi.
</p>

<p>
  Seuraava esimerkki ei toimi, sillä muuttujaa <code>leveys</code> ei ole esitelty.
</p>

<% partial 'partials/code_highlight' do %>
leveys += 100;           // ei toimi!
<% end %>

<p>
  Kun muuttuja on esitelty, laskukin toimii oikein.
</p>

<% partial 'partials/code_highlight' do %>
int leveys = 100;  // muuttujan esittely ja arvon asetus
leveys += 100;     // toimii!
<% end %>

<p>
  Myös muille kuin yhteen- ja vähennyslaskuille on Javassa vastaavat sijoitusoperaatiot.
</p>

<% partial 'partials/code_highlight' do %>
int pituus = 100;
System.out.println(pituus);

pituus *= 10; // sama kuin pituus = pituus * 10;
System.out.println(pituus);

pituus /= 100; // sama kuin pituus = pituus / 100;
System.out.println(pituus);

pituus %= 3; // sama kuin pituus = pituus % 3;
System.out.println(pituus);
<% end %>

<% partial 'partials/sample_output' do %>
100
1000
10
1
<% end %>


<% partial 'partials/material_sub_heading' do %>
  Syötteen lukeminen ja sijoitus
<% end %>

<p>
  Käyttäjän kirjoittamaa syötettä voidaan lukea <code>Scanner</code>-apuvälineen avulla:
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);
  int pituus = 100;

  System.out.println(pituus);

  System.out.print("Paljonko poistetaan? ");
  pituus = pituus - Integer.parseInt(lukija.nextLine());
  System.out.println(pituus);

  System.out.print("Paljonko lisätään? ");
  pituus = pituus + Integer.parseInt(lukija.nextLine());
  System.out.println(pituus);
<% end %>

<p>Tulostus esimerkiksi:</p>

<% partial 'partials/sample_output' do %>
  100
  Paljonko poistetaan? <font color="red">42</font>
  58
  Paljonko lisätään? <font color="red">1</font>
  59
<% end %>



<p>
  Tarkastellaan lauseen <code>pituus = pituus - Integer.parseInt(lukija.nextLine());</code> suoritusta tarkemmin.
</p>

<p>
  Kyseessä on sijoituslause, missä muuttujaan <code>pituus</code> asetetaan lausekkeen <code>pituus - Integer.parseInt(lukija.nextLine())</code> evaluaation tuottama arvo. Lauseke <code>pituus - Integer.parseInt(lukija.nextLine())</code> evaluoidaan seuraavasti:
</p>


<ol>

  <li>Tietokone etsii muuttujan <code>pituus</code> arvon. Koska muuttuja on luotu aiemmin, se löytyy: sen arvo on <code>100</code>. Nyt lauseke on muotoa <code>100 - Integer.parseInt(lukija.nextLine());</code>.</li>

  <li>Tietokone suorittaa lausekkeen osan <code>Integer.parseInt(lukija.nextLine())</code>:
    <ol>
      <li>Ensin suoritetaan sulkujen sisällä oleva osa, eli <code>lukija.nextLine()</code>. Tämä johtaa siihen, että ohjelma jää odottamaan käyttäjältä syötettä. Kun käyttäjä antaa syötteen, esimerkiksi "42", vaihtuu komennon <code>lukija.nextLine()</code> paikalle käyttäjän syöttämä merkkijono "42". Seuraavaksi suoritettava komento on nyt <code>Integer.parseInt("42");</code>.</li>
      <li><code>Integer.parseInt("42")</code> muuntaa tekstimuuttujan, jonka arvo on <code>"42"</code>, kokonaislukumuuttujaksi, jonka arvo on <code>42</code>.</li>
    </ol>
  </li>

  <li>Lausekkeen <code>Integer.parseInt(lukija.nextLine())</code> paikalle asetetaan sen evaluaatiosta saatu arvo, tässä <code>42</code>. Nyt lauseke on muotoa <code>100 - 42</code>.</li>

  <li>Tietokone evaluoi lausekkeen <code>100 - 42</code>, jonka tulos on <code>58</code>.</li>

</ol>

<p>
  Lopulta lause on muotoa <code>pituus = 58</code>, eli muuttujan <code>pituus</code> arvoksi asetetaan <code>58</code>.
</p>


<% partial 'partials/exercise', locals: { name: 'Kolmen luvun summa' } do %>

  <p>
    Tee ohjelma, joka kysyy käyttäjältä kolme lukua ja tulostaa niiden summan. Huom! Käytä tehtäväpohjaan valmiiksi luotuja muuttujia -- älä siis luo uusia muuttujia koodiin.  Tee ohjelmastasi seuraavan muotoinen:
  </p>

  <% partial 'partials/code_highlight' do %>
    Scanner lukija = new Scanner(System.in);
    int summa = 0;

    // KIRJOITA OHJELMA TÄHÄN
    // ÄLÄ KÄYTÄ MUITA MUUTTUJIA KUIN lukija JA summa!

    System.out.println("Summa: " + summa);
  <% end %>


  <% partial 'partials/sample_output' do %>
    Anna ensimmäinen luku: <font color="red">3</font>
    Anna toinen luku: <font color="red">6</font>
    Anna kolmas luku: <font color="red">12</font>

    Summa: 21
  <% end %>
<% end %>



<% partial 'partials/material_heading' do %>
  Uusi ystäväsi: Crowdsorcerer
<% end %>

<p>
  Ohjelmoidessa tarkkaa tehtävänantoa ei yleensä ole, vaan pikemminkin jonkinlainen haluttu lopputulos. Seuraavaksi onkin tarkoitus opetella kehittämään tehtävänantoja itse. Tehtävien luominen auttaa käsittämään prosessia koodaamisen taustalla: onko olennaista toteuttaa tehtävä vaikkapa ehtolauseita käyttäen, vai olisiko jokin muu lähestymistapa parempi. Näiden tehtävänantojen tekeminen auttaa myös kurssin sisältöjen omaksumisessa ja kokonaisuuksien hahmottamisessa.
</p>

<p>
  Koodarit toimivat usein yhdessä, joten on hyödyllistä osata lukea toisten koodia. Myös omat ohjelmointitaidot paranevat, kun oppii huomaamaan ja välttämään yleisiä ohjelmointivirheitä. Ohjelman koodi on myös osa sen dokumentaatiota, eli koodia lukemalla oppii ymmärtämään erilaisten ohjelmien toimintaa.
</p>

<p>
  Nyt sinulla on myös mahdollisuus saada kurssille juuri sinua kiinnostavia tehtäviä! Alla olevan vempaimen, Crowdsorcererin, avulla voit luoda tehtävänantoja malliratkaisuineen muille kurssilaisille.
</p>

<% partial 'partials/hint', locals: { name: 'Crowdsorcererin käyttö' } do %>
  <p>
    Keksi ohjetta vastaava tehtävä. Tehtävän aiheena voi olla vaikkapa syötteen tulostus tai toistolauseen käyttö. Kirjoita selkeä tehtävänanto, jossa kerrot lyhyesti toteutettavan ohjelman perusidean ja esimerkiksi käytettävät muuttujat. Halutessasi voit ottaa mallia kurssin tehtävänannoista. Tarkoituksena on kuvata ongelma tarpeeksi tarkasti, jotta tehtävän tekijä osaa koodata sille ratkaisun.
  </p>

  <p>
    Kirjoita tämän jälkeen tehtävälle malliratkaisu. Lähdekoodikentässä on valmiiksi annettuna koodipohja, jossa harmaalla taustalla merkittynä ovat rivit, joita et voi muuttaa. Osa koodista, niin kutsuttu tehtäväpohja, tulee tehtävän tekijälle näkyviin. Painamalla rivinumeroiden vieressä olevia neliöitä voit merkitä osan tehtävästä malliratkaisuksi, jolloin nuo rivit eivät näy tehtävän tekijälle. Tehtäväpohjaksi tulee ne rivit, joita et merkitse siniseksi. Painamalla "Nollaa malliratkaisu" -nappia saat palautettua malliratkaisun sen alkuperäiseen tilaan.
  </p>

  <p>
    Toteuttamasi malliratkaisun toimivuus tarkistetaan testien avulla. Sinä määrität, miten malliratkaisusi pitäisi toimia tietyssä tilanteessa, testit toteuttavat tämän tilanteen, ja kertovat, toimiko ohjelma kuten piti. Hyvin usein ohjelmat toimivat niin, että käyttäjältä pyydetään jotain tietoa, jota ohjelma prosessoi, minkä jälkeen ohjelma palauttaa käyttäjälle uutta tietoa. Tällöin syötteellä tarkoitetaan käyttäjältä pyydettyä tietoa, ja tuloksella ohjelman palauttamaa tietoa. Tehdessäsi tehtävää, kirjoita malliratkaisun testeille syöte ja odotettu tulos niille varattuihin kenttiin. Kun lähetät tehtävän, malliratkaisua testataan antamallasi syötteellä, ja ohjelman antamaa tulosta verrataan määrittämääsi tulokseen. Jos ohjelman tuloste ei sisällä määrittämääsi tulosta, kertoo Crowdsorcerer, miten tulokset erosivat toisistaan. Syöte-tuloste-pareja on oltava vähintään yksi, mutta kannattaa keksiä useampia.
  </p>

  <p>
    Anna lopuksi tehtävälle kuvaavat tagit. Vempain ehdottaa usein käytettyjä tageja, mutta voit myös keksiä omasi.
  </p>

  <p>
    Kun lähetät tehtävän, se välitetään palvelimelle, joka tarkastaa tehtävän ja malliratkaisun toimivuuden. Tämä prosessi vie hieman aikaa, joten odotathan kärsivällisesti! Mikäli tehtävässäsi on ongelmia, saat palautteena virheviestin korjaamisen avuksi. Voit lähettää tehtävän uudelleen niin monta kertaa kuin haluat, ja viimeisin hyväksytysti läpimennyt tehtävä annetaan muiden opiskelijoiden arvioitavaksi seuraavalla viikolla.
  </p>
<% end %>

<% partial 'partials/youtube' do %>
  <iframe class="youtube-video" src="https://www.youtube.com/embed/gaCnnbKwlwI" frameborder="0" allowfullscreen></iframe>
<% end %>

<% partial 'partials/general_callout', locals: { name: 'Suunnittele oma tehtävä: Ehtolause' } do %>
  Tee tehtävä, jonka tarkoitus on laittaa opiskelija koodaamaan ohjelma, joka lukee käyttäjältä kokonaislukusyötteen, tarkastelee sitä ehtolauseen avulla ja tulostaa merkkijonon. Anna testejä vasten syöte-esimerkki ja ohjelman tuloste tuolla syötteellä.
<% end %>

<div class='crowdsorcerer-widget' data-assignment='6'></div>



<% partial 'partials/material_heading' do %>
  Toistolause
<% end %>

<p>
  Tutustuimme ensimmäisessä osassa pikaisesti toistolauseeseen. Toistetaan asiaa hieman ja syvennytään toistolauseen toimintaan tarkemmin.
</p>

<p>
  Toistolause <code>while (true) { /* toistettava */ }</code> saa aikaan sen, että toistolauseeseen liittyvää lohkoa, eli <code>{}</code>:lla rajattuja komentoja suoritetaan monta kertaa. Lohkossa olevien rivien määrää ei ole rajattu.
</p>


<% partial 'partials/material_sub_heading' do %>
  Toistolauseesta poistuminen
<% end %>

<p>
  Toistolauseesta poistuminen onnistuu <strong>break</strong>-komennolla, joka kirjoitetaan tyypillisesti toistolauseen lohkon sisällä olevaan ehtolauseeseen, missä tarkastellaan haluaako käyttäjä poistua toistolauseesta.
</p>

<p>
  Alla olevassa esimerkissä toistolauseen avulla tulostetaan luvut viidestä yhteen.
</p>

<% partial 'partials/code_highlight' do %>
  int luku = 5;

  while (true) {
      System.out.println(luku);
      luku--;

      if(luku &lt; 1) {
          break;
      }
  }
<% end %>

<% partial 'partials/sample_output' do %>
  5
  4
  3
  2
  1
<% end %>


<% partial 'partials/hint', locals: { name: 'Toistolauseesta poistutaan vasta kun break-komento suoritetaan' } do %>

  <p>
    Huomaa, että toistolauseesta poistutaan kun ohjelman suoritus saavuttaa break-komennon. Alla edellä olevaan esimerkkiin on tehty näennäisesti pieni muutos, mikä samalla muuttaa tulostusta.
  </p>

  <% partial 'partials/code_highlight' do %>
  int luku = 5;

  while (true) {
      System.out.println(luku);

      if(luku &lt; 1) {
          break;
      }

      luku--;
  }
  <% end %>

  <% partial 'partials/sample_output' do %>
  5
  4
  3
  2
  1
  0
  <% end %>

<% end %>



<%= partial 'partials/quiz', locals: { id: '5a609b65f4b4dd00042a0d82' } %>


<% partial 'partials/exercise', locals: { name: 'Yhdestä sataan' } do %>

  <p>
    Tee ohjelma, joka tulostaa kokonaisluvut väliltä 1&ndash;100.
  </p>

  <p>
    Ohjelman tulostus on seuraava:
  </p>

  <% partial 'partials/sample_output' do %>
    1
    2
    3
    (välissä paljon rivejä)
    98
    99
    100
  <% end %>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Sadasta yhteen' } do %>

  <p>
    Tee ohjelma, joka tulostaa kokonaisluvut väliltä 100&ndash;1.
  </p>

  <p>
    Ohjelman tulostus on seuraava:
  </p>

  <% partial 'partials/sample_output' do %>
    100
    99
    98
    (välissä paljon rivejä)
    3
    2
    1
  <% end %>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Parilliset luvut' } do %>

  <p>
    Tee ohjelma, joka tulostaa parilliset kokonaisluvut väliltä 2&ndash;100.
  </p>

  <% partial 'partials/sample_output' do %>
    2
    4
    6
    (välissä paljon rivejä)
    96
    98
    100
  <% end %>
<% end %>


<% partial 'partials/material_sub_heading' do %>
  Toistolause ja interaktiivinen toiminnallisuus
<% end %>


<p>
  Interaktiivisen toiminnallisuuden lisääminen toistolauseeseen onnistuu suoraviivaisesti. Alla olevassa esimerkissä on toteutettu ohjelma, joka lukee käyttäjältä lukuja. Kun käyttäjä syöttää luvun 0, ohjelman suoritus päätyy break-komentoon ja lukeminen lopetetaan.
</p>


<% partial 'partials/code_highlight' do %>
Scanner lukija = new Scanner(System.in);

while (true) {
    System.out.println("osaan ohjelmoida!");

    System.out.print("jatketaanko (0 lopettaa)? ");
    int komento = Integer.parseInt(lukija.nextLine());
    if (komento == 0) {
        break;
    }
}

System.out.println("kiitos ja kuulemiin.");
<% end %>

<p>
  Kun tietokone suorittaa komennon <code>break</code>, siirtyy se toistolausetta seuraavan komennon suorittamiseen.
</p>

<p>
  Hieman yleistäen, toistolausetta käyttävän ohjelman rakenne on tyypillisesti seuraavanlainen.
</p>


<% partial 'partials/code_highlight' do %>
  // lukijan esittely
  Scanner lukija = new Scanner(System.in);
  // tarvittavien muuttujien esittely

  while (true) {
      // lukeminen ja lopetusehdon tarkistaminen
      int luettu = Integer.parseInt(lukija.nextLine());
      if (luettu == 0) {
          break;
      }

      // toiminnallisuus, joka tehdään jos toistoa
      // ei vielä lopeteta
  }

  // toiminnallisuus, joka tehdään toiston
  // lopettamisen jälkeen
<% end %>



<% partial 'partials/exercise', locals: { name: 'Useamman luvun summa' } do %>

  <p>
    Tee ohjelma, joka lukee käyttäjältä lukuja ja tulostaa niiden summan. Ohjelma lopettaa kyselemisen kun syötetään luku 0. Käytä seuraavaa pohjaa, jonka saat myös palautusautomaatilta:
  </p>

  <% partial 'partials/code_highlight' do %>
    Scanner lukija = new Scanner(System.in);

    int summa = 0;
    System.out.print("Anna lukuja, nolla lopettaa: ");
    while (true) {
        int luettu = Integer.parseInt(lukija.nextLine());
        if (luettu == 0) {
            break;
        }

        // TEE JOTAIN TÄÄLLÄ

    }

    System.out.println("Summa lopussa: " + summa);
  <% end %>

  <p>
    Ohjelman tulee toimia seuraavasti:
  </p>

  <% partial 'partials/sample_output' do %>
    Anna lukuja, nolla lopettaa:
    <font color="red">3</font>
    <font color="red">2</font>
    <font color="red">1</font>
    <font color="red">1</font>
    <font color="red">0</font>
    Summa: 7
  <% end %>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Juupas eipäs' } do %>

  <p>
    Kirjoita ohjelma, joka kysyy käyttäjältä lukua. Jos luku on positiivinen, tulostetaan "Juupas", jonka jälkeen kysytään lukua uudestaan. Jos luku on negatiivinen, tulostetaan "Eipäs" ja kysytään lukua uudestaan. Ohjelman suoritus loppuu kun käyttäjä syöttää luvun 0.
  </p>

  <p>
    Kun mietit minkälaisilla syötteillä ohjelma toimii toivotusti, erilaisia toimintoja on 3. Ohjelmaa kannattaa siis testata ainakin kolmella erilaisella syötteellä, jonka lisäksi lienee hyvä tarkastaa ohjelman toiminta hyvin pienillä (esim. -10000) ja hyvin suurilla syötteillä (10000).
  </p>

  <p>
    Alla vielä toivottu toiminnallisuus vuokaaviona.
  </p>

  <img src="/img/vuokaaviojuupaseipas.png" alt='st=>start: Alku

						io=>inputoutput: lue luku

						cond=>condition: luku > 0
						cond2=>condition: luku < 0

						io2=>inputoutput: "Juupas"
						io3=>inputoutput: "Eipäs"
						e=>end: Loppu

						st->io->cond
						cond(yes, right)->io2->io
						cond(no)->cond2
						cond2(yes, right)->io3->io
						cond2(no)->e'></img>

<% end %>



<% partial 'partials/material_sub_heading' do %>
  Esimerkki: Laskin
<% end %>

<p>
  Seuraavassa esimerkissä on toteutettu summa- ja erotustoiminnallisuudet tarjoava laskin. Laskin kysyy käyttäjältä numeerista komentoa. Komennolla <em>0</em> poistutaan toistolauseesta. Jos komento ei ole lopetus, kysytään kahta lukua. Jos komento oli <em>1</em> lasketaan lukujen summa ja tulostetaan se.  Jos komento oli <em>2</em> lasketaan lukujen erotus ja tulostetaan se. Muussa tapauksessa ilmoitetaan että komento on tuntematon. Lopulta -- kun suoritus päätyy toistolauseen lohkon päättävään aaltosulkuun -- palataan toistolauseen lohkon alkuun -- eli toistolauseen lohkon avaavaan aaltosulkuun --, mistä ohjelman suoritus jatkuu.
</p>

<% partial 'partials/code_highlight' do %>
System.out.println("tervetuloa käyttämään laskinta");

while (true) {
    System.out.print("anna komento (1=summa, 2=erotus, 0=lopetus): ");

    int komento = Integer.parseInt(lukija.nextLine());
    if (komento == 0) {
        break;
    }

    System.out.print("anna luvut ");
    int eka = Integer.parseInt(lukija.nextLine());
    int toka = Integer.parseInt(lukija.nextLine());

    if (komento == 1) {
        int summa = eka + toka;
        System.out.println("lukujen summa " + summa);
    } else if (komento == 2) {
        int erotus = eka - toka;
        System.out.println("lukujen erotus " + erotus);
    } else {
        System.out.println("tuntematon komento");
    }
}

System.out.println("kiitos ja kuulemiin.");
<% end %>


<% partial 'partials/material_sub_heading' do %>
  Toiston jatkaminen
<% end %>


<p>
  Törmäämme usein tilanteeseen, missä osa ohjelmalle annetuista syötteistä on epäkelpoja. Jos syötteitä käsitellään toistolauseessa, haluamme mahdollisimman nopeasti palata uuden syötteen lukemiseen. Komennolla <code>continue</code> siirrytään toistolauseen alkuun.
</p>


<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  System.out.print("Anna lukuja, negatiiviset luvut eivät kelpaa: ");

  while (true) {
      int luettu = Integer.parseInt(lukija.nextLine());

      // tarkastetaan onko syöte epäkelpo -- jos kyllä, palataan toistolauseen
      // alkuun
      if (luettu &lt; 0) {
          continue;
      }

      // tehdään jotain täällä jos syöte on kelpo eli nolla tai positiivinen
  }
<% end %>

<p>
  Ylläoleva ohjelma palaa heti uuden syötteen lukemiseen jos käyttäjä syöttää negatiivisen luvun.
</p>

<p>
  Komentoja <code>break</code> ja <code>continue</code> käytetään usein yhdessä. Komennolla <code>break</code> lopetetaan toistolauseen suoritus, kun taas komennolla <code>continue</code> voidaan rajata vain osa syötteistä käsiteltäväksi.
</p>

<p>
  Allaoleva ohjelma laskee positiivisten syötteiden summan. Jos käyttäjä syöttää negatiivisen luvun, ohjelma pyytää käyttäjältä seuraavaa lukua. Toistolauseesta poistutaan jos käyttäjä syöttää nollan.
</p>


<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  System.out.print("Anna lukuja, negatiiviset luvut eivät kelpaa: ");
  int summa = 0;

  while (true) {
      int luettu = Integer.parseInt(lukija.nextLine());

      if (luettu == 0) {
          break;
      }

      if (luettu &lt; 0) {
          continue;
      }

      summa += luettu;
  }

  System.out.println("Hyväksyttävien lukujen summa: " + summa);
<% end %>

<p>
  Ohjelmaan voi tuoda mukaan myös muita muuttujia. Allaolevassa esimerkissä lasketaan summan lisäksi hyväksyttyjen ja epäkelpojen lukujen lukumäärä.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  System.out.print("Anna lukuja, negatiiviset luvut eivät kelpaa: ");
  int summa = 0;
  int hyvaksytytLuvut = 0;
  int epakelvotLuvut = 0;

  while (true) {
      int luettu = Integer.parseInt(lukija.nextLine());

      if (luettu == 0) {
          break;
      }

      if (luettu &lt; 0) {
          epakelvotLuvut++;
          continue;
      }

      summa += luettu;
      hyvaksytytLuvut++;
  }

  System.out.println("Hyväksyttävien lukujen summa: " + summa);
  System.out.println("Hyväksyttyjä lukuja: " + hyvaksytytLuvut);
  System.out.println("Epäkelvot luvut: " + epakelvotLuvut);
<% end %>



<% partial 'partials/exercise', locals: { name: 'Kelvollisten lukujen lukumäärä' } do %>

  <p>
    Toteuta ohjelma, joka lukee käyttäjän antamia syötteitä ja laskee kelvollisten lukujen lukumäärän. Luku on kelvollinen, jos se on suurempi tai yhtäsuuri kuin -140 ja pienempi tai yhtäsuuri kuin 20. Lopeta syötteiden lukeminen kun käyttäjä syöttää luvun 9999.
  </p>

  <p>
    Jos käyttäjä syöttää luvun, joka on pienempi kuin -140 tai suurempi kuin 20, hänelle kerrotaan ettei syötetty luku ollut kelvollinen.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luku: <font color="red">5</font>
    Syötä luku: <font color="red">22</font>
    Kelvoton luku
    Syötä luku: <font color="red">-11</font>
    Syötä luku: <font color="red">-140</font>
    Syötä luku: <font color="red">-18</font>
    Syötä luku: <font color="red">9999</font>

    Kelvollisia lukuja yhteensä: 4
  <% end %>
<% end %>

<% partial 'partials/exercise', locals: { name: 'Kelvollisten lukujen summa' } do %>

  <p>
    Toteuta ohjelma, joka lukee käyttäjän antamia syötteitä ja laskee kelvollisten lukujen summan. Luku on kelvollinen, jos se on suurempi tai yhtäsuuri kuin -140 ja pienempi tai yhtäsuuri kuin 20. Lopeta syötteiden lukeminen kun käyttäjä syöttää luvun 9999.
  </p>

  <p>
    Jos käyttäjä syöttää luvun, joka on pienempi kuin -140 tai suurempi kuin 20, hänelle kerrotaan ettei syötetty luku ollut kelvollinen.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luku: <font color="red">5</font>
    Syötä luku: <font color="red">22</font>
    Kelvoton luku
    Syötä luku: <font color="red">-11</font>
    Syötä luku: <font color="red">-140</font>
    Syötä luku: <font color="red">-18</font>
    Syötä luku: <font color="red">9999</font>

    Kelvollisten lukujen summa: −164
  <% end %>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Marsin lämpötilan keskiarvo' } do %>

  <p>
    Toteuta ohjelma <a href="https://fi.wikipedia.org/wiki/Mars" target="_blank" rel="noopener">Mars</a>-planeetan lämpötilamittausten tarkasteluun. Marsin alin lämpötila (pinnalla) on -140 astetta, korkein lämpötila on 20 astetta. Ohjelmalle syötetään mittauksia kunnes käyttäjä syöttää luvun 9999. Tämän jälkeen kerrotaan lämpötilamittausten keskiarvo.
  </p>

  <p>
    Jos et muista miten keskiarvo lasketaan, tutustu aiheen <a href="https://fi.wikipedia.org/wiki/Aritmeettinen_keskiarvo" target="_blank">Wikipedia</a>-sivuun.
  </p>

  <p>
    Jos käyttäjä syöttää luvun, joka on pienempi kuin -140 tai suurempi kuin 20, lukua ei huomioida lämpötilan keskiarvon laskemisessa.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä mittaus: <font color="red">-41</font>
    Syötä mittaus: <font color="red">-11</font>
    Syötä mittaus: <font color="red">23</font>
    Syötä mittaus: <font color="red">2</font>
    Syötä mittaus: <font color="red">-14</font>
    Syötä mittaus: <font color="red">-22</font>
    Syötä mittaus: <font color="red">-45</font>
    Syötä mittaus: <font color="red">9999</font>

    Mittausten keskiarvo: -21.833333333333332
  <% end %>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Arvauspeli' } do %>

  <p>
    Toteuta ohjelma, missä käyttäjän tulee arvata välillä 1-10 oleva luku. Aseta pelin arvattavaksi luvuksi 7.
  </p>

  <p>
    Ohjelman suoritus loppuu kun käyttäjä arvaa oikean luvun (eli 7). Jos käyttäjä syöttää luvun, joka on suurempi kuin 10 tai pienempi kuin 1, käyttäjälle kerrotaan ettei hänen syöttämänsä luku ollut kelvollinen.
  </p>

  <p>
    Ohjelman tulee kertoa käyttäjälle käyttäjän tekemien kelvollisten arvausten määrä. Välille 1-10 osuvat arvaukset lasketaan kelvollisiksi, mukaan lukien oikea arvaus.
  </p>


  <% partial 'partials/sample_output' do %>
    Minäpä tiedän luvun väliltä 1-10, jota sinä et tiedä!

    Arvaa luku: <font color="red">5</font>
    Ei ollut!
    Arvaa luku: <font color="red">28</font>
    Epäkelpo luku!
    Arvaa luku: <font color="red">10</font>
    Ei ollut!
    Arvaa luku: <font color="red">7</font>

    Oikein! Arvauksia yhteensä: 3
  <% end %>

  <p>
    Kun saat ohjelman valmiiksi, palauta se. Voit halutessasi tämän jälkeen kokeilla pelin pelaamista myös satunnaisilla luvuilla. Välillä 1-10 olevan satunnaisen luvun arpominen onnistuu seuraavasti:
  </p>

  <% partial 'partials/code_highlight' do %>
    int luku = (int) (1 + Math.random() * 10);
  <% end %>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Vihjaava arvauspeli' } do %>

  <p>
    Toteuta ohjelma, missä käyttäjän tulee arvata välillä 1-100 oleva luku. Aseta pelin arvattavaksi luvuksi 42.
  </p>

  <p>
    Ohjelman suoritus loppuu kun käyttäjä arvaa oikean luvun (eli 42). Jos käyttäjä syöttää luvun, joka on suurempi kuin 100 tai pienempi kuin 1, käyttäjälle kerrotaan ettei hänen syöttämänsä luku ollut kelvollinen.
  </p>

  <p>
    Jos käyttäjä syöttää luvun, joka on pienempi kuin arvattava luku, käyttäjälle kerrotaan että arvattava luku on suurempi. Jos taas käyttäjä syöttää luvun, joka on suurempi kuin arvattava luku, käyttäjälle kerrotaan että arvattava luku on pienempi.
  </p>

  <p>
    Ohjelman tulee kertoa käyttäjälle myös tehtyjen kelvollisten arvausten määrä.
  </p>


  <% partial 'partials/sample_output' do %>
    Minäpä tiedän luvun väliltä 1-100, jota sinä et tiedä!

    Arvaa luku: <font color="red">5</font>
    Lukuni on isompi!
    Arvaa luku: <font color="red">25</font>
    Lukuni on isompi!
    Arvaa luku: <font color="red">450</font>
    Epäkelpo luku!
    Arvaa luku: <font color="red">50</font>
    Lukuni on pienempi!
    Arvaa luku: <font color="red">45</font>
    Lukuni on pienempi!
    Arvaa luku: <font color="red">40</font>
    Lukuni on isompi!
    Arvaa luku: <font color="red">42</font>

    Oikein! Arvauksia yhteensä: 6
  <% end %>

  <p>
    Kun saat ohjelman valmiiksi, palauta se. Voit halutessasi tämän jälkeen kokeilla pelin pelaamista myös satunnaisilla luvuilla. Välillä 1-100 olevan satunnaisen luvun arpominen onnistuu seuraavasti:
  </p>

  <% partial 'partials/code_highlight' do %>
    int luku = (int) (1 + Math.random() * 100);
  <% end %>

<% end %>



<% partial 'partials/material_sub_heading' do %>
  Toistolauseen ehtolauseke
<% end %>

<p>
  Olemme tähän mennessä käyttäneet toistolausetta, jonka ehtolausekkeen arvona on true. Tämä tarkoittaa sitä, että toistoa jatketaan ikuisesti.
</p>

<p>
  Ehtolausekkeeseen voi asettaa myös lausekkeen, joka evaluoidaan ohjelman suorituksen yhteydessä. Lauseke määritellään täsmälleen samalla tavalla kuin ehtolauseen (if) ehto.
</p>

<p>
  Seuraavassa esimerkissä tulostetaan luvut 1, 2, ..., 5.  Kun <code>luku</code>-muuttujan arvo on yli 5, <code>while</code>-ehto ei ole enää voimassa ja toistaminen lopetetaan.
</p>


<% partial 'partials/code_highlight' do %>
  int luku = 1;

  while (luku &lt; 6) {
      System.out.println(luku);
      luku++;
  }
<% end %>

<p>
  Lue ylläoleva "niin pitkään kuin muuttujan luku arvo on pienempi kuin 6, tulosta muuttujan luku arvo ja kasvata muuttujan luku arvoa yhdellä".
</p>

<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n    public static void main(String[] args) {\n        int luku = 1;\n\n        while (luku < 6) {\n            System.out.println(luku);\n            luku++;\n        }\n    }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":1},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"4","frame_id":4}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku":1},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"8","frame_id":8}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":1},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"12","frame_id":12}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":2},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"13","frame_id":13}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":2},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"14","frame_id":14}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku":2},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"18","frame_id":18}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":2},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"22","frame_id":22}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":3},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"23","frame_id":23}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":3},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"24","frame_id":24}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku":3},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"28","frame_id":28}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":3},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"32","frame_id":32}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":4},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"33","frame_id":33}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":4},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"34","frame_id":34}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku":4},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"38","frame_id":38}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":4},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":5},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"43","frame_id":43}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":5},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"44","frame_id":44}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku":5},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"48","frame_id":48}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n5\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":5},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"52","frame_id":52}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n5\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"luku":6},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"53","frame_id":53}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n5\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"luku":6},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"54","frame_id":54}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n5\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{"luku":6},"ordered_varnames":["luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"58","frame_id":58}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"1\n2\n3\n4\n5\n","event":"return","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{"luku":6,"__return__":["VOID"]},"ordered_varnames":["luku","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"60","frame_id":60}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>

<p>
  Yllä muuttujan <code>luku</code> arvoa kasvatetaan yhdellä aina kun toistolauseen lohko suoritetaan.
</p>


<% partial 'partials/code_highlight' do %>
  int luku = 1024;

  while (luku &gt;= 1) {
      System.out.println(luku);
      luku /= 2;
  }
<% end %>

<p>
  Screencast aiheesta:
</p>

<a href="http://www.youtube.com/watch?feature=player_embedded&v=us9GXUZ60ws" height="300" target="_blank" rel="noopener"><img src="/img/youtube.jpg"/></a>

<p></p>

<p></p>


<% partial 'partials/hint', locals: { name: 'Moniosaisista tehtävistä' } do %>

  <p>
    Huomaa, että tästä lähtien tehtävissä saattaa olla useampia osia. Jokainen osa lasketaan yksittäiseksi tehtäväksi, eli esimerkiksi seuraava tehtävä vastaa kahta yksiosaista tehtävää. Useampiosaiset tehtävät voi tyypillisesti palauttaa myös vaikka tehtävä ei olisi vielä valmis -- tällöin valmiista osista lisätään pisteet kirjanpitoon.
  </p>

<% end %>


<% partial 'partials/exercise', locals: { name: 'Mihin ja mistä? (2 osaa)' } do %>

  <p>
    Tämä tehtävä on ensimmäinen kaksiosainen tehtävä. Kun teet molemmat osat, saat tehtävästä kaksi tehtäväpistettä. Voit palauttaa tehtävän myös siten, että vain ensimmäinen osa on tehtynä.
  </p>


  <h2>Mihin asti?</h2>

  <p>
    Kirjoita ohjelma, joka tulostaa kokonaisluvut 1:stä käyttäjän antamaan lukuun asti.
  </p>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">3</font>
    1
    2
    3
  <% end %>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">5</font>
    1
    2
    3
    4
    5
  <% end %>

  <p>
    <strong>Vihje:</strong> käyttäjältä lukemasi luku toimii nyt whilen lopetusehdon ylärajana. Muista että Javassa <code>a &lt;= b</code> tarkoittaa <em>a pienempi tai yhtä suuri kuin b</em>.
  </p>


  <h2>Mistä lähtien?</h2>

  <p>
    Lisää ohjelmaan käyttäjältä kysyttävä alaraja.
  </p>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">8</font>
    Mistä lähtien? <font color="red">5</font>
    5
    6
    7
    8
  <% end %>

  <p>
    Jos tavoite on suurempi kuin lähtökohta ei tulostu mitään:
  </p>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">12</font>
    Mistä lähtien? <font color="red">16</font>
  <% end %>

  <p>
    <em>Huom!</em> muista että ala- ja yläraja voivat olla myös negatiivisia!
  </p>

<% end %>




<% partial 'partials/material_sub_sub_heading' do %>
  Toistolauseke ja toiston suorituksen lopettamisesta
<% end  %>

<p>
  Toistolauseen suoritus ei lopu heti kun toistolauseen ehtolauseke voisi evaluoitua todeksi. Toistolauseen ehtolauseke evaluoidaan aina kun saavutaan toistolauseen alkuun, eli (1) kun ohjelman seuraava suoritettava lause on toistolause, ja (2) kun toistolauseeseen liittyvän lohkon sisältämän ohjelmakoodin suoritus on saatu loppuun.
</p>

<p>
  Tarkastellaan seuraavaa toistolausetta.
</p>

<% partial 'partials/code_highlight' do %>
  int luku = 1;

  while (luku != 2) {
      System.out.println(luku);
      luku = 2;
      System.out.println(luku);
      luku = 1;
  }
<% end %>

<p>
  Ohjelman tulostus seuraavanlainen:
</p>

<% partial 'partials/sample_output' do %>
  1
  2
  1
  2
  1
  2
  ...
<% end %>

<p>
  Vaikka muuttujan <code>luku</code> arvo on välillä 2, toistolauseen suoritus ei lopu koskaan.
</p>

<p>
  <strong>Toistolauseen ehto tarkistetaan siis vain kun toistolauseen toistaminen aloitetaan sekä silloin kun koodin suoritus on päässyt toistolauseen lopettavaan aaltosulkuun asti.</strong> Jos ehto on totta, suoritus hyppää takaisin toistolauseen alkuun, ja jos ehto on epätotta, suoritus siirtyy toistolausetta seuraavaan lauseeseen.
</p>

<p>
  Vaikka muuttujan <code>luku</code> arvo on ylläolevassa toistolauseessa välillä 2, ei se ole koskaan 2 toistolauseen lopussa. Lopussa ehto <code>luku != 2</code> on aina totta, ja suoritus jatkuu..
</p>


<% partial 'partials/material_sub_heading' do %>
  Toisto ja useampi muuttuja
<% end  %>

<p>
  Ohjelmat ovat usein tyyppiä "tee jotain tietty määrä kertoja". Näissä ohjelmissa esiintyy toisto, jonka jokaisella toistokerralla tehdään haluttu toiminnallisuus sekä muutetaan kertojen lukumäärää laskevaa laskurimuuttujaa.
</p>

<p>
  Seuraava ohjelma laskee tulon 4*3 hieman kömpelöllä tavalla eli summana 3 + 3 + 3 + 3:
</p>

<% partial 'partials/code_highlight' do %>
  int tulos = 0;

  int i = 0;
  while (true) {
      tulos += 3; // tarkoittaa samaa kuin tulos = tulos + 3;
      i++;  // tarkoittaa samaa kuin i = i + 1;

      if (i == 4) {
           break;
      }
  }

  System.out.println(tulos);
<% end %>

<p>
  Saman toiminnallisuuden voi toteuttaa myös seuraavasti.
</p>

<% partial 'partials/code_highlight' do %>
  int tulos = 0;

  int i = 0;
  while (i &lt; 4) {
      tulos += 3; // tarkoittaa samaa kuin tulos = tulos + 3;
      i++;  // tarkoittaa samaa kuin i = i + 1;
  }

  System.out.println(tulos);
<% end %>


<p>
  Mitä enemmän ohjelmassa on muuttujia, sitä haastavampaa ohjelman askeleittaisen suorituksen seuraaminen on. Ohjelman ymmärtämisen kannalta suorituksen seuraaminen on kuitenkin tärkeää.
</p>

<p>
  Yksi näppärä tapa muuttujien arvojen tarkasteluun toistolauseessa on taulukko. Seuraavaan taulukkoon on kirjoitettu auki edellisen esimerkin muuttujien <code>tulos</code> ja <code>i</code> arvot kullakin toistolauseen ehdon <code>i &lt; 4</code> vertailuhetkellä.
</p>


<table class="table">
  <tr>
    <th>tulos</th>
    <th>i</th>
    <th>i &lt; 4</th>
  </tr>
  <tr>
    <td>0</td>
    <td>0</td>
    <td>true</td>
  </tr>
  <tr>
    <td>3</td>
    <td>1</td>
    <td>true</td>
  </tr>
  <tr>
    <td>6</td>
    <td>2</td>
    <td>true</td>
  </tr>
  <tr>
    <td>9</td>
    <td>3</td>
    <td>true</td>
  </tr>
  <tr>
    <td>12</td>
    <td>4</td>
    <td>false</td>
  </tr>
</table>

<p>
  Toistolauseen suoritus loppuu kun muuttujan <code>summa</code> arvo on 12 ja muuttujan <code>i</code> arvo on 4 (ehto <code>i &lt; 4</code> on tällöin epätotta).
</p>

<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n    public static void main(String[] args) {\n        int tulos = 0;\n\n        int i = 0;\n        while (i < 4) {\n            tulos += 3;\n            i++;\n        }\n\n        System.out.println(tulos);\n    }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{"tulos":0},"ordered_varnames":["tulos"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"4","frame_id":4}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"tulos":0,"i":0},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"tulos":0,"i":0},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"11","frame_id":11}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":3,"i":0},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"13","frame_id":13}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":3,"i":1},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"15","frame_id":15}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"tulos":3,"i":1},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"16","frame_id":16}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"tulos":3,"i":1},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"20","frame_id":20}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":6,"i":1},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"22","frame_id":22}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":6,"i":2},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"24","frame_id":24}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"tulos":6,"i":2},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"25","frame_id":25}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"tulos":6,"i":2},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"29","frame_id":29}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":9,"i":2},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"31","frame_id":31}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":9,"i":3},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"33","frame_id":33}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"tulos":9,"i":3},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"34","frame_id":34}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{"tulos":9,"i":3},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"38","frame_id":38}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":12,"i":3},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"40","frame_id":40}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"tulos":12,"i":4},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"tulos":12,"i":4},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"43","frame_id":43}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{"tulos":12,"i":4},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"47","frame_id":47}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"12\n","event":"step_line","line":12,"stack_to_render":[{"func_name":"main:12","encoded_locals":{"tulos":12,"i":4},"ordered_varnames":["tulos","i"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"51","frame_id":51}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"12\n","event":"return","line":12,"stack_to_render":[{"func_name":"main:12","encoded_locals":{"tulos":12,"i":4,"__return__":["VOID"]},"ordered_varnames":["tulos","i","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"52","frame_id":52}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>


<% partial 'partials/exercise', locals: { name: 'Lukusarjan summa' } do %>

  <p>
    Tee ohjelma, joka laskee summan 1+2+3+...+n, missä n on käyttäjän syöttämä luku.
  </p>

  <p>
    Esimerkkitulostuksia:
  </p>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">3</font>
    Summa on 6
  <% end %>

  <p>
    Edellisessä esimerkissä laskettiin 1 + 2 + 3 = 6
  </p>

  <% partial 'partials/sample_output' do %>
    Mihin asti? <font color="red">7</font>
    Summa on 28
  <% end %>

  <p>
    Ja nyt laskettiin 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28
  </p>

  <p>
    <strong>Vihje:</strong> Tee ohjelma <code>while</code>-komennon avulla. Käytä ohjelmassasi apumuuttujaa toistokertojen muistamiseen. Lisää jokaisella toistokerralla toistokerrat muistavan muuttujan arvo apumuuttujaan johon lasket summan arvon.
  </p>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Rajatun lukusarjan summa' } do %>

  <p>
    Muuta edellistä tehtävää siten, että käyttäjä määrää summan laskemisen aloituskohdan. Voit olettaa, että käyttäjä antaa ensin pienemmän luvun ja sitten suuremman luvun.
  </p>

  <p>
    Esimerkkitulostuksia:
  </p>

  <% partial 'partials/sample_output' do %>
    Ensimmäinen: <font color="red">3</font>
    Viimeinen: <font color="red">5</font>
    Summa on 12
  <% end %>

  <p>
    Edellisessä laskettiin 3 + 4 + 5 = 12
  </p>

  <% partial 'partials/sample_output' do %>
    Ensimmäinen: <font color="red">2</font>
    Viimeinen: <font color="red">8</font>
    Summa on 35
  <% end %>

  <p>
    Ja nyt laskettiin 2 + 3 + 4 + 5 + 6 + 7 + 8 = 35
  </p>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Kertoma' } do %>

  <p>
    Tee ohjelma, joka laskee käyttäjän syöttämän luvun kertoman.
  </p>

  <p>
    Kertoma <code>n!</code> lasketaan kaavalla 1*2*3*...*n. Esimerkiksi luvun 4 kertoma on 24, eli 4! = 1*2*3*4 = 24. Lisäksi on määritelty, että luvun 0 kertoma on 1, eli 0! = 1.
  </p>

  <p>
    Esimerkkitulostuksia:
  </p>

  <% partial 'partials/sample_output' do %>
    Anna luku: <font color="red">3</font>
    Kertoma on 6
  <% end %>

  <p>
    Nyt laskettiin 1 * 2 * 3 = 6
  </p>


  <% partial 'partials/sample_output' do %>
    Anna luku: <font color="red">10</font>
    Kertoma on 3628800
  <% end %>

  <p>
    Ja nyt laskettiin 1 * 2 * 3 * ... * 8 * 9 * 10 = 3628800
  </p>


  <p>
    <em>Lisätietoa</em>: Kertomaa käytetään erityisesti todennäköisyyslaskennassa tilanteissa, missä halutaan esimerkiksi tarkastella jonkin joukon kaikkia erilaisia järjestyksiä. Esimerkiksi viiden hengen ryhmän voi järjestää 5! erilaiseen jonoon, ja 52 kortin korttipakka voi olla 52! erilaisessa järjestyksessä. Kertomaa voi käyttää myös <a href="http://fi.wikipedia.org/wiki/Kombinaatio" target="_blank" rel="noopener">kombinaatioiden</a> laskemiseen; esimerkiksi 52 kortin korttipakasta on mahdollista jakaa 52! / (5! * (52 - 5)!) erilaisella viiden kortin kättä, ja 40 numeron joukosta voi tehdä yhteensä 40! / (7! * (40 - 7)!) erilaista 7 numeron lottoriviä.
  </p>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Plaseeraus on epätoivoista' } do %>

  <p>
    Kaverisi on järjestämässä pienimuotoiset kekkerit. Hän on hyvin tarkka plaseerauksen suhteen ja miettii miten vieraat pitäisi asettaa pöytään.
  </p>

  <p>
    Auta toteuttamasi ohjelman avulla kaveriasi ymmärtämään, ettei kaikkia mahdollisia plaseerausvaihtoehtoja kannata käydä läpi pohtia.
  </p>


  <p>
    Ohjelmaan on toteutettuna valmiiksi graafinen käyttöliittymä, mihin kaverisi voi syöttää vieraiden lukumäärän. Muuta ohjelman toimintaa siten, että ohjelma laskee plaseerausvaihtoehtojen lukumäärän, ja näyttää sen käyttäjälle. Hyödynnä tässä edellisessä tehtävässä tekemääsi kertomaa.
  </p>

  <img src="/img/exercises/02-12-01.png" />

  <p>&nbsp;</p>

  <img src="/img/exercises/02-12-02.png" />


  <p>&nbsp;</p>

  <p>
    Huomaat todennäköisesti, että ohjelma toimii vain melko pienillä vieraslukumäärillä. Tämä liittyy siihen, minkäkokoisua lukuja int-tyyppiset muuttujat voivat korkeintaan sisältää. Palaamme tähän myöhemmin kurssilla.
  </p>

<% end %>




<% partial 'partials/hint', locals: { name: 'Ohjelmien tekeminen pienissä paloissa' } do %>

  <p>
    Kun teet ohjelmaa, oli se sitten harjoitustehtävä tai oma projektisi, mieti minkälaisia osia ohjelma tarvitsee toimiakseen, ja etene näitä pieniä osia yksitellen toteuttaen. Jokaisen osan toteuttamisen jälkeen kokeile tähänastisen ohjelmasi toimintaa.
  </p>

  <p>
    Älä koskaan yritä ratkaista koko ongelmaa kerralla, sillä tällöin ohjelman suorittaminen ja testaaminen kesken ongelmanratkaisuprosessin on vaikeaa. Aloita jollain helpolla asialla jonka tiedät varmasti osaavasi. Kun yksi ohjelman osa on saatu toimimaan, voit siirtyä ratkaisemaan seuraavaa ongelmaa.
  </p>

  <p>
    Osa kurssin tehtävistä on valmiiksi osiin pilkottuja. Usein osat pitää vielä pilkkoa ohjelmoinnin kannalta vieläkin pienempiin paloihin. Kannattaa tehdä siten, että suoritat ohjelman lähes jokaisen uuden koodirivin jälkeen. Tällöin varmistat, että ratkaisu on etenemässä haluttuun suuntaan.
  </p>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Silmukat, lopetus ja muistaminen (5 osaa)' } do %>

  <p>
    Seuraavassa tehtävässä tehdään yksi ohjelma, mutta ohjelman rakentaminen tapahtuu hyvin pienissä paloissa. Tämä on ehdottoman suositeltava tapa aina kun ohjelmoit.
  </p>

  <p>
    Tehtäväsarja muodostaa yhden isomman ohjelman, jonka toiminnallisuus toteutetaan pienissä paloissa. Jos et tee tehtäväsarjaa loppuun asti, voit lähettää sen tarkastettavaksi vajaatekoisenakin. Tämä onnistuu painamalla testausnapin oikealla puolella olevasta "submit"-napista eli pienestä ylöspäinosoittavasta nuolesta. Vaikka palautusautomaatti valittaakin vielä tekemättä olevien tehtävänosien testeistä, kirjautuvat jo tekemiesi osien pisteet.
  </p>

  <p>
    Huom: nyt (ja jatkossa) jokainen isomman tehtävän "alitehtävä" on saman arvoinen tehtävä kuin alikohdaton tehtävä. Tämä tehtävä vastaa siis viittä normaalia tehtävää.
  </p>


  <h2>Lukujen lukeminen</h2>

  <p>
    Tee ohjelma, joka kysyy käyttäjältä lukuja (ohjelma tulostaa käyttäjälle aluksi "Syötä luvut:"), kunnes käyttäjä antaa luvun -1. Kun käyttäjä syöttää luvun -1, ohjelma tulostaa "Kiitos ja näkemiin!" ja päättyy.
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luvut:
    <font color="red">5</font>
    <font color="red">2</font>
    <font color="red">4</font>
    <font color="red">-1</font>
    Kiitos ja näkemiin!
  <% end %>


  <h2>Lukujen summa</h2>

  <p>
    Laajenna edellistä ohjelmaa siten, että ohjelma ilmoittaa käyttäjän syöttämien lukujen summan. (Lukua -1 ei lasketa mukaan.)
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luvut:
    <font color="red">5</font>
    <font color="red">2</font>
    <font color="red">4</font>
    <font color="red">-1</font>
    Kiitos ja näkemiin!
    Summa: 11
  <% end %>

  <h2>Lukujen summa ja lukumäärä</h2>


  <p>
    Laajenna edellistä ohjelmaa siten, että ohjelma ilmoittaa myös käyttäjien antamien lukujen lukumäärän. (Lukua -1 ei lasketa mukaan.)
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luvut:
    <font color="red">5</font>
    <font color="red">2</font>
    <font color="red">4</font>
    <font color="red">-1</font>
    Kiitos ja näkemiin!
    Summa: 11
    Lukuja: 3
  <% end %>


  <h2>Lukujen keskiarvo</h2>

  <p>
    Muuta edellistä ohjelmaa siten, ohjelma ilmoittaa lukujen keskiarvon. (Lukua -1 ei lasketa mukaan.)
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luvut:
    <font color="red">5</font>
    <font color="red">2</font>
    <font color="red">4</font>
    <font color="red">-1</font>
    Kiitos ja näkemiin!
    Summa: 11
    Lukuja: 3
    Keskiarvo: 3.666666666666
  <% end %>


  <h2>Parilliset ja parittomat</h2>

  <p>
    Laajenna edellistä ohjelmaa siten, että  ohjelma ilmoittaa parillisten ja parittomien lukujen määrän. (Lukua -1 ei lasketa mukaan.)
  </p>

  <% partial 'partials/sample_output' do %>
    Syötä luvut:
    <font color="red">5</font>
    <font color="red">2</font>
    <font color="red">4</font>
    <font color="red">-1</font>
    Kiitos ja näkemiin!
    Summa: 11
    Lukuja: 3
    Keskiarvo: 3.666666666666
    Parillisia: 2
    Parittomia: 1
  <% end %>

<% end %>






<% partial 'partials/material_sub_heading' do %>
  Toistolauseet ja ohjelman tyyli
<% end %>


<p>
  Tarkastellaan vielä aiemmin näkemämme ohjelman varianttia. Allaolevassa esimerkissä ohjelmoija on toteuttanut lopettamisen jälkeen tapahtuvan toiminnallisuuden osaksi ehtolausetta, missä toistolauseesta poistutaan.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  System.out.print("Anna lukuja, negatiiviset luvut eivät kelpaa: ");
  int summa = 0;
  int hyvaksytytLuvut = 0;
  int epakelvotLuvut = 0;

  while (true) {
      int luettu = Integer.parseInt(lukija.nextLine());

      if (luettu == 0) {
          System.out.println("Hyväksyttävien lukujen summa: " + summa);
          System.out.println("Hyväksyttyjä lukuja: " + hyvaksytytLuvut);
          System.out.println("Epäkelvot luvut: " + epakelvotLuvut);
          break;
      }

      if (luettu &lt; 0) {
          epakelvotLuvut++;
          continue;
      }

      summa += luettu;
      hyvaksytytLuvut++;
  }
<% end %>

<p>
  Ylläoleva lähestymistapa ei ole suositeltava, sillä se johtaa helposti hyvin monimutkaiseen ohjelman rakenteeseen. Jos toistolauseen lopettamisen yhteydessä pitäisi tehdä muutakin -- esimerkiksi lukea lisää syötteitä -- asetettaisiin kyseinenkin toiminnallisuus helposti ehtolauseen sisälle, mikä johtaa yhä vaikeammin ymmärrettävään lähdekoodiin.
</p>

<p>
  Pitäydytään seuraavassa toistolauseen muodossa:
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  // toistolauseessa tarvittavien muuttujien luominen

  while (true) {
      // syötteen lukeminen

      // toistolauseesta poistuminen -- break

      // epäkelpojen syötteiden rajaaminen pois -- continue

      // hyväksyttävien syötteiden käsittely
  }

  // toistolauseesta poistumisen jälkeen suoritettava toiminnallisuus
<% end %>

<p>
  Toisin sanoen, yllä oleva ohjelma on selkeämpi jos toistolauseesta poistumisen jälkeen tehtävät asiat ovat toistolauseen ulkopuolella.
</p>

<% partial 'partials/code_highlight' do %>
  Scanner lukija = new Scanner(System.in);

  System.out.print("Anna lukuja, negatiiviset luvut eivät kelpaa: ");
  int summa = 0;
  int hyvaksytytLuvut = 0;
  int epakelvotLuvut = 0;

  while (true) {
      int luettu = Integer.parseInt(lukija.nextLine());

      if (luettu == 0) {
          break;
      }

      if (luettu &lt; 0) {
          epakelvotLuvut++;
          continue;
      }

      summa += luettu;
      hyvaksytytLuvut++;
  }

  System.out.println("Hyväksyttävien lukujen summa: " + summa);
  System.out.println("Hyväksyttyjä lukuja: " + hyvaksytytLuvut);
  System.out.println("Epäkelvot luvut: " + epakelvotLuvut);
<% end %>



<% partial 'partials/hint', locals: { name: 'Ikuinen debaatti: break' } do %>

  <p>
    Opittavan ja käytettävän toistolauseen ominaisuuksia on tarkasteltu ohjelmoinnin opetukseen liittyvässä tutkimuksessa pitkään. Eräs debaatti liittyy <code>break</code>-komennon käyttöön. Jotkut ovat sitä mieltä, että sen käyttäminen on yleisesti ottaen hyvä käytäntö, toiset taas ovat sitä mieltä, että se toimii esimerkiksi toistolauseen käyttöön tutustumisessa. Jotkut taas eivät suosi sen käyttämistä lainkaan.
  </p>

<% end %>


<% partial 'partials/material_heading' do %>
  Metodit
<% end %>


<p>
  Olemme käyttäneet useita erilaisia komentoja Javassa: sijoitusta, laskutoimituksia, vertailuja, if:iä ja whileä. Ruudulle tulostaminen on tehty <code>System.out.println()</code> lauseella. Myös lause <code>Integer.parseInt(lukija.nextLine())</code> näyttää tutulta.
</p>

<p>
  Huomaamme, että jälkimmäinen joukko edellä lueteltuja komentoja poikkeaa <code>if</code>:istä ja <code>while</code>:stä ym. siinä, että komennon perässä on sulut ja joskus sulkujen sisällä komennolle annettava syöte. "Sulkuihin päättyvät" eivät oikeastaan olekaan komentoja vaan metodeja.
</p>

<p>
  Teknisesti ottaen <strong>metodi</strong> tarkoittaa nimettyä lauseista koostuvaa joukkoa, jota voi kutsua muualta ohjelmakoodista nimen perusteella. Koodirivi <code>System.out.println("olen metodille annettava parametri!")</code> siis tarkoittaa, että kutsutaan metodia, joka suorittaa ruudulle tulostamisen. Metodin sisäinen toteutus -- eli joukko suoritettavia lauseita -- on tässä tapauksessa java-ohjelmointikielen piilottama.
</p>

<p>
  Metodin suorituksen jälkeen palataan takaisin kohtaan, missä ennen metodikutsua oltiin menossa, ja ohjelman suoritus jatkuu tästä. Metodille suluissa annettua syötettä kutsutaan <strong>metodin parametriksi</strong> -- metodin parametreilla annetaan metodeille tarkempaa tietoa odotetusta suorituksesta; esimerkiksi tulostuslauseelle kerrotaan parametrin avulla <em>mitä</em> pitäisi tulostaa.
</p>

<p>
  Parametrin lisäksi <strong>metodilla voi olla paluuarvo</strong>. Esim. tuttu lause:
</p>

<% partial 'partials/code_highlight' do %>
int luku = Integer.parseInt(lukija.nextLine());
<% end %>

<p>
  sisältää kaksi metodikutsua. Ensin kutsutaan sisempänä olevaa metodia <code>lukija.nextLine</code>. Metodilla on paluuarvonaan käyttäjän syöttämä merkkijono. Seuraavaksi kutsutaan metodia <code>Integer.parseInt</code>. Metodikutsun parametrina on merkkijono jonka metodin <code>lukija.nextLine</code> kutsu palautti ja metodin paluuarvona on merkkijonoa vastaava kokonaisluku.
</p>

<p>
  Metodin nimeen näyttää liittyvän piste, esim. <code>lukija.nextLine()</code>. Oikeastaan tässä metodin nimi onkin pisteen oikeanpuoleinen osa, eli <code>nextLine()</code>. Pisteen vasemmanpuoleinen osa, eli tässä <code>lukija</code> kertoo <strong>kenen metodista on kyse</strong>. Eli kyseessä on <em>lukijan</em> metodi nextLine. Opimme hiukan myöhemmin tarkemmin mistä tässä pisteen vasemmanpuoleisessa osassa on kyse. Tarkka lukija tietysti huomaa, että <code>System.out.println()</code>:ssa on "kaksi pistettä". Metodin nimi tässä on println, ja <code>System.out</code> on se kenen metodista on kyse. Karkeasti ottaen <code>System.out</code> tarkoittaa koneen näyttöä.
</p>

<p>
  Tähän mennessä käyttämämme metodit ovat kaikki olleet Javan valmiita metodeita. Opetellaan seuraavaksi tekemään omia metodeita.
</p>


<% partial 'partials/material_sub_heading' do %>
  Omat metodit
<% end %>

<p>
  Olemme tähän mennessä ohjelmoineet ohjelmamme siten, että kaikki tapahtuu yhdessä jatkumossa ja koodia luetaan ylhäältä alas.
</p>

<p>
  Edellä mainittiin että "<strong>metodi</strong> tarkoittaa nimettyä lauseista koostuvaa joukkoa, jota voi kutsua muualta ohjelmakoodista nimen perusteella". Javan valmiita metodeja on käytetty oikeastaan ensimmäisestä ohjelmasta lähtien.
</p>

<p>
  Javan valmiiden metodien käytön lisäksi ohjelmoija voi kirjoittaa itse metodeja joita sovellus kutsuu. Oikeastaan on hyvin poikkeuksellista jos ohjelmassa ei ole yhtään itse kirjoitettua metodia. Tästä lähtien lähes jokainen kurssilla tehty ohjelma sisältääkin itsekirjoitettuja metodeja.
</p>

<p>
  Ohjelmarunkoon metodit kirjoitetaan main:in aaltosulkeiden ulkopuolelle mutta kuitenkin "uloimmaisten" aaltosulkeiden sisäpuolelle, joko mainin ylä- tai alapuolelle.
</p>

<% partial 'partials/code_highlight' do %>
import java.util.Scanner;

public class Esimerkki {
    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);
        // ohjelmakoodi
    }

    // omia metodeja tänne
}
<% end %>

<p>
  Luodaan metodi <code>tervehdi</code>.
</p>

<% partial 'partials/code_highlight' do %>
public static void tervehdi() {
    System.out.println("Terveiset metodimaailmasta!");
}
<% end %>

<p>
  Ja asetetaan se metodeille kuuluvalle paikalle.
</p>

<% partial 'partials/code_highlight' do %>
import java.util.Scanner;

public class Esimerkki {
    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);
        // ohjelmakoodi
    }

    // omia metodeja tänne
    public static void tervehdi() {
        System.out.println("Terveiset metodimaailmasta!");
    }
}
<% end %>

<p>
  Metodin määrittely sisältää kaksi osaa. Metodimäärittelyn ensimmäisellä rivillä on metodin nimi eli <em>tervehdi</em>. Nimen vasemmalla puolella tässä vaiheessa määreet <code>public static void</code>. Metodin nimen sisältävän rivin alla on aaltosulkeilla erotettu koodilohko, jonka sisälle kirjoitetaan metodin koodi, eli ne komennot jotka metodia kutsuttaessa suoritetaan. Metodimme <code>tervehdi</code> ei tee muuta kuin kirjoittaa rivillisen tekstiä ruudulle.
</p>


<div class="typonator-widget">
  <div class="typonator-model-source">
import java.util.Scanner;

public class Esimerkki {
    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);
        // ohjelmakoodi
    }

    // omia metodeja tänne
    public static void tervehdi() {
        System.out.println("Terveiset metodimaailmasta!");
    }
}
  </div>
  <div class="typonator-template-source">
import java.util.Scanner;

public class Esimerkki {
    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);
        // ohjelmakoodi
    }

    // omia metodeja tänne
    // MARK
}
  </div>
</div>

<p>
  Itsekirjoitetun metodin kutsu on helppoa, kirjoitetaan metodin nimi ja perään sulut ja puolipiste. Seuraavassa main eli pääohjelma kutsuu tervehdi-metodia yhteensä neljä kertaa.
</p>

<% partial 'partials/code_highlight' do %>
import java.util.Scanner;

public class OhjelmaRunko {
    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);

        // ohjelmakoodi
        System.out.println("Kokeillaan pääsemmekö metodimaailmaan:");
        tervehdi();

        System.out.println("Näyttää siltä, kokeillaan vielä:");
        tervehdi();
        tervehdi();
        tervehdi();
    }

    // omat metodit
    public static void tervehdi() {
        System.out.println("Terveiset metodimaailmasta!");
    }
}
<% end %>

<p>
  Ohjelman suoritus saa aikaan seuraavan tulosteen:
</p>

<% partial 'partials/sample_output' do %>
Kokeillaan pääsemmekö metodimaailmaan:
Terveiset metodimaailmasta!
Näyttää siltä, kokeillaan vielä:
Terveiset metodimaailmasta!
Terveiset metodimaailmasta!
Terveiset metodimaailmasta!
<% end %>

<p>
  Huomionarvoista tässä on ohjelman suoritusjärjestys. Ohjelman suoritus etenee siten, että pääohjelman --  eli main:in -- rivit suoritetaan ylhäältä alas yksi kerrallaan. Kun lause on metodikutsu, ohjelman suoritus siirtyy metodiin. Metodin lauseet suoritetaan yksi kerrallaan ylhäältä alas. Tämän jälkeen palataan kohtaan, josta metodin kutsu tapahtui. Tarkemmin ottaen metodikutsun jälkeiselle riville.
</p>

<p>
  Jos ollaan tarkkoja niin pääohjelma eli main on itsekin metodi. Kun ohjelma käynnistyy, kutsuu käyttöjärjestelmä main:ia. Metodi main on siis ohjelman käynnistyspiste, jonka ylimmältä riviltä ohjelman suoritus lähtee liikkeelle. Ohjelman suoritus loppuu kun päädytään mainin loppuun.
</p>


<% partial 'partials/exercise', locals: { name: 'Tekstin tulostus' } do %>

  <p>
    Tee metodi <code>tulostaTeksti</code>, joka tulostaa tekstin "Alussa olivat suo, kuokka ja Java." sekä rivinvaihdon.
  </p>

  <% partial 'partials/code_highlight' do %>
    public static void main(String[] args) {
        tulostaTeksti();
    }

    public static void tulostaTeksti() {
        // kirjoita koodia tähän
    }
  <% end %>

  <p>
    Ohjelman tulostus:
  </p>

  <% partial 'partials/sample_output' do %>
    Alussa olivat suo, kuokka ja Java.
  <% end %>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Monta tulostusta' } do %>

  <p>
    Laajenna edellistä ohjelmaa siten, että pääohjelma kysyy käyttäjältä, montako kertaa teksti tulostetaan eli montako kertaa metodia kutsutaan.
  </p>

  <% partial 'partials/code_highlight' do %>
    public static void main(String[] args) {
        // kysy käyttäjältä, montako kertaa teksti tulostetaan
        // kutsu metodia tulostaTeksti while-komennon avulla useita kertoja
    }

    public static void tulostaTeksti() {
        // kirjoita koodia tähän
    }
  <% end %>

  <p>
    Ohjelman tulostus:
  </p>

  <% partial 'partials/sample_output' do %>
    Kuinka monta?
    <font color="red">7</font>
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
    Alussa olivat suo, kuokka ja Java.
  <% end %>

  <p>
    <strong>Huom:</strong> tulosta kehote <em>Kuinka monta?</em> omalle rivilleen!
  </p>

<% end %>


<p>
  Jatkossa kun esittelemme metodeja, emme erikseen mainitse että niiden täytyy sijaita omalla paikallaan. Metodia ei esimerkiksi voi määritellä toisen metodin sisällä.
</p>



<% partial 'partials/material_sub_heading' do %>
  Metodikutsujen suoritus ja kutsupino
<% end %>

<p>
  Mistä tietokone tietää minne metodin suorituksen jälkeen tulee palata?
</p>

<p>
  Java-lähdekoodin suoritusympäristö pitää kirjaa suoritettavasta metodista kutsupinossa. <strong>Kutsupino</strong> sisältää kehyksiä, joista jokainen sisältää tiedon kyseisen metodin sisäisistä muuttujista sekä niiden arvoista. Kun metodia kutsutaan, kutsupinoon luodaan uusi kehys, joka sisältää metodin sisältämät muuttujat. Kun metodin suoritus loppuu, metodiin liittyvä kehys poistetaan kutsupinosta, jolloin suoritusta jatketaan kutsupinon edeltävästä metodista.
</p>

<p>
  Alla olevan visualisaation oikealla laidalla näytetään kutsupinon toimintaa. Metodikutsun yhteydessä kutsupinoon luodaan uusi kehys, joka poistetaan metodikutsusta poistuttaessa.
</p>

<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n   public static void main(String[] args) {\n      // ohjelmakoodi\n      System.out.println(\"Kokeillaan pääsemmekö metodimaailmaan:\");\n      tervehdi();\n\n      System.out.println(\"Näyttää siltä, kokeillaan vielä:\");\n      tervehdi();\n      tervehdi();\n      tervehdi();\n   }\n\n   // omat metodit\n   public static void tervehdi() {\n      System.out.println(\"Terveiset metodimaailmasta!\");\n   }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":4,"stack_to_render":[{"func_name":"main:4","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":4,"stack_to_render":[{"func_name":"main:4","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"5","frame_id":5}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\n","event":"call","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"6","frame_id":6},{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"8","frame_id":8},{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"9","frame_id":9}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"16","frame_id":16},{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"17","frame_id":17}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\n","event":"return","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"18","frame_id":18},{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"19","frame_id":19}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\n","event":"step_line","line":7,"stack_to_render":[{"func_name":"main:7","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"20","frame_id":20}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\n","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"24","frame_id":24}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\n","event":"call","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"25","frame_id":25},{"func_name":"main:8","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"26","frame_id":26}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"27","frame_id":27},{"func_name":"main:8","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"28","frame_id":28}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"35","frame_id":35},{"func_name":"main:8","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"36","frame_id":36}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\n","event":"return","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"37","frame_id":37},{"func_name":"main:8","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"38","frame_id":38}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"39","frame_id":39}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\n","event":"call","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"41","frame_id":41},{"func_name":"main:9","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"43","frame_id":43},{"func_name":"main:9","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"44","frame_id":44}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"51","frame_id":51},{"func_name":"main:9","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"52","frame_id":52}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"return","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"53","frame_id":53},{"func_name":"main:9","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"54","frame_id":54}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"step_line","line":10,"stack_to_render":[{"func_name":"main:10","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"55","frame_id":55}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"call","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"57","frame_id":57},{"func_name":"main:10","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"58","frame_id":58}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tervehdi:15","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"59","frame_id":59},{"func_name":"main:10","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"60","frame_id":60}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"67","frame_id":67},{"func_name":"main:10","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"68","frame_id":68}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"return","line":16,"stack_to_render":[{"func_name":"tervehdi:16","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"69","frame_id":69},{"func_name":"main:10","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"70","frame_id":70}],"globals":{},"ordered_globals":[],"func_name":"tervehdi","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"71","frame_id":71}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"Kokeillaan pääsemmekö metodimaailmaan:\nTerveiset metodimaailmasta!\nNäyttää siltä, kokeillaan vielä:\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\nTerveiset metodimaailmasta!\n","event":"return","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"73","frame_id":73}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>



<% partial 'partials/material_sub_heading' do %>
  Metodien nimennästä
<% end %>

<p>
  Metodit nimetään siten, että ensimmäinen sana kirjoitetaan pienellä ja loput alkavat isolla alkukirjaimella, tälläisestä kirjoitustavasta käytetään nimitystä camelCase. Tämän lisäksi, metodin sisällä koodi on sisennetty taas neljä merkkiä.
</p>

<table class="table">
  <thead>
    <tr><th>Väärin</th><th>Oikein</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>
        <% partial 'partials/code_highlight' do %>
public static void Tama_metodi_sanoo_mur ( ) {
System.out.println("mur");
}
        <% end %>
      </td>
      <td>
        <% partial 'partials/code_highlight' do %>
public static void tamaMetodiSanooMur() {
    System.out.println("mur");
}
        <% end %>
      </td>
    </tr>
  </tbody>
</table>



<% partial 'partials/material_sub_heading' do %>
  Metodin parametrit
<% end %>

<p>
  <strong>Parametrit</strong> ovat metodille annettavia arvoja, joita käytetään metodin suorituksessa. Metodin parametrit määritellään metodin ylimmällä rivillä metodin nimen jälkeen olevien sulkujen sisällä.  Kun metodia kutsutaan, sen parametreille annetaan arvot kutsuvaiheessa.
</p>

<p>
  Seuraavassa esimerkissä määritellään parametrillinen metodi <code>tervehdi</code>, jolla on int-tyyppinen parametri <code>montakoKertaa</code>.
</p>

<% partial 'partials/code_highlight' do %>
public static void tervehdi(int montakoKertaa) {
    int i = 0;
    while (i &lt; montakoKertaa) {
        System.out.println("Tervehdys!");
        i++;
    }
}
<% end %>

<p>
  Kutsutaan metodia <code>tervehdi</code> siten, että parametrin <code>montakoKertaa</code> arvoksi asetetaan ensimmäisellä kutsulla <code>1</code> ja toisella kutsulla <code>3</code>.</p>

<% partial 'partials/code_highlight' do %>
public static void main(String[] args) {
    tervehdi(1);
    tervehdi(3);
}
<% end %>

<% partial 'partials/sample_output' do %>
  Tervehdys!
  Tervehdys!
  Tervehdys!
  Tervehdys!
<% end %>

<p>
  Aivan kuten Javan valmista <code>System.out.println()</code>-metodia kutsuttaessa, voi oman metodin kutsussa parametrina antaa lausekkeen.</p>

<% partial 'partials/code_highlight' do %>
public static void main(String[] args) {
    tervehdi(1 + 2);
}
<% end %>

<% partial 'partials/sample_output' do %>
  Tervehdys!
  Tervehdys!
  Tervehdys!
<% end %>

<p>
  Jos metodia kutsuttaessa parametriksi määritellään lauseke, evaluoidaan lauseke ennen metodikutsua. Yllä metodikutsun parametri evaluoituu arvoksi <code>3</code> ja lopullinen metodikutsu on muotoa <code>tervehdi(3);</code>.
</p>


<% partial 'partials/material_sub_heading' do %>
  Monta parametria
<% end %>

<p>
  Metodille voidaan määritellä useita parametreja. Tällöin metodin kutsussa parametrit annetaan samassa järjestyksessä.
</p>

<% partial 'partials/code_highlight' do %>
public static void summa(int eka, int toka) {
    System.out.println("Lukujen " + eka + " ja " + toka + " summa on " + (eka + toka));
}
<% end %>

<% partial 'partials/code_highlight' do %>
  summa(3, 5);

  int luku1 = 2;
  int luku2 = 4;

  summa(luku1, luku2);
<% end %>

<% partial 'partials/sample_output' do %>
  Lukujen 3 ja 5 summa on 8
  Lukujen 2 ja 4 summa on 6
<% end %>



<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n    public static void main(String[] args) {\n        summa(3, 5);\n       \n        int luku1 = 2;\n        int luku2 = 4;\n       \n        summa(luku1, luku2);       \n    }\n   \n    public static void summa(int eka, int toka) {\n        System.out.println(\"\" + eka + \" + \" + toka + \" = \" + (eka + toka));\n    }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"call","line":12,"stack_to_render":[{"func_name":"summa:12","encoded_locals":{"eka":3,"toka":5},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"5","frame_id":5},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"6","frame_id":6}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"","event":"step_line","line":12,"stack_to_render":[{"func_name":"summa:12","encoded_locals":{"eka":3,"toka":5},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"8","frame_id":8}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n","event":"step_line","line":13,"stack_to_render":[{"func_name":"summa:13","encoded_locals":{"eka":3,"toka":5},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"13","frame_id":13},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"14","frame_id":14}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n","event":"return","line":13,"stack_to_render":[{"func_name":"summa:13","encoded_locals":{"eka":3,"toka":5,"__return__":["VOID"]},"ordered_varnames":["eka","toka","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"15","frame_id":15},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"16","frame_id":16}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n","event":"step_line","line":5,"stack_to_render":[{"func_name":"main:5","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"17","frame_id":17}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3 + 5 = 8\n","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"luku1":2},"ordered_varnames":["luku1"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"20","frame_id":20}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3 + 5 = 8\n","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"23","frame_id":23}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3 + 5 = 8\n","event":"call","line":12,"stack_to_render":[{"func_name":"summa:12","encoded_locals":{"eka":2,"toka":4},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"27","frame_id":27},{"func_name":"main:8","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"28","frame_id":28}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n","event":"step_line","line":12,"stack_to_render":[{"func_name":"summa:12","encoded_locals":{"eka":2,"toka":4},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"29","frame_id":29},{"func_name":"main:8","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"30","frame_id":30}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n2 + 4 = 6\n","event":"step_line","line":13,"stack_to_render":[{"func_name":"summa:13","encoded_locals":{"eka":2,"toka":4},"ordered_varnames":["eka","toka"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"39","frame_id":39},{"func_name":"main:8","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"40","frame_id":40}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n2 + 4 = 6\n","event":"return","line":13,"stack_to_render":[{"func_name":"summa:13","encoded_locals":{"eka":2,"toka":4,"__return__":["VOID"]},"ordered_varnames":["eka","toka","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"41","frame_id":41},{"func_name":"main:8","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"summa","heap":{}},{"stdout":"3 + 5 = 8\n2 + 4 = 6\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{"luku1":2,"luku2":4},"ordered_varnames":["luku1","luku2"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"43","frame_id":43}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"3 + 5 = 8\n2 + 4 = 6\n","event":"return","line":9,"stack_to_render":[{"func_name":"main:9","encoded_locals":{"luku1":2,"luku2":4,"__return__":["VOID"]},"ordered_varnames":["luku1","luku2","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"45","frame_id":45}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>



<% partial 'partials/hint', locals: { name: 'Metodien merkintä vuokaavioon' } do %>

  <p>
    Metodikutsut merkitään reunallisilla neliöillä vuokaavioihin ja metodien toiminta piirretään tyypillisesti omina erillisinä vuokaavioinaan. Käytännössä alla oleva ohjelma piirrettäisiin siis kahdessa osassa.
  </p>

  <% partial 'partials/code_highlight' do %>
  public class Esimerkki {
      public static void main(String[] args) {
          summa(3, 5);

          int luku1 = 2;
          int luku2 = 4;

          summa(luku1, luku2);
      }

      public static void summa(int eka, int toka) {
          System.out.println("" + eka + " + " + toka + " = " + (eka + toka));
      }
  }
  <% end %>

  <p>
    Pääohjelma (main-metodi):
  </p>

  <img src="/img/metodivuokaavio.png" alt='Tehty flowchart.js.org-osoitteessa. Koodi: st=>start: Alku

					   sr=>subroutine: summa(3, 5)

					   op=>operation: luku1 = 2
					   op2=>operation: luku2 = 4


					   sr2=>subroutine: summa(luku1, luku2)

					   e=>end: Loppu

					   st->sr->op->op2->sr2->e'></img>

  <p>
    Summa-metodi:
  </p>

  <img src="/img/metodivuokaavio2.png" alt='Tehty flowchart.js.org-osoitteessa. Koodi: st=>start: summa (luku1, luku2)

					    io=>inputoutput: eka + " + " + toka + " = " + (eka + toka)

					    e=>end: Loppu

					    st->io->e'></img>

  <p>
    Yllä olevassa vuokaaviossa summa-metodin vuokaavion alkupiste on nimetty metodin nimen mukaan. Tämä ei ole kuitenkaan pakollista -- oleellista vuokaavioilla on päätyä tilanteeseen, missä ne helpottavat ohjelman suorituksen ymmärtämistä.
  </p>
<% end %>


<% partial 'partials/exercise', locals: { name: 'Jakolasku' } do %>

  <p>
    Kirjoita metodi <code>public static void jakolasku(int osoittaja, int nimittaja)</code>, joka tulostaa osoittajan ja nimittäjän jakolaskun tuloksen (<code>osoittaja / nimittaja</code>). Muistuta mieleen mitä omituisuuksia jakolaskuihin liittyi.
  </p>

  <p>
    TMC:n mukana tulevat testit eivät testaa metodin toiminnan oikeellisuutta. Tässä -- kuten yleensäkin -- on hyvä testata metodin toimintaa itse. Ennen kuin testaat metodia, mieti minkälaisilla syötteillä pitäisi tulla minkälaisia tulostuksia ja kokeile ainakin kolmea erilaista vaihtoehtoa. Testaa myös, että "ei tasan" menevät jakolaskut toimivat oikein.
  </p>
<% end %>

<% partial 'partials/material_sub_heading' do %>
  Parametrien arvot kopioituvat
<% end %>

<p>
  Metodikutsun yhteydessä <strong>parametrien arvot kopioituvat</strong>. Tämä tarkoittaa käytännössä sitä, että sekä main-metodissa että kutsuttavassa metodissa voi olla saman nimiset muuttujat, mutta muuttujien arvon muuttaminen kutsuttavan metodin sisällä ei muuta main-metodissa olevan muuttujan arvoa. Tarkastellaan tätä seuraavan ohjelman avulla.
</p>

<% partial 'partials/code_highlight' do %>
  public class Esimerkki {
      public static void main(String[] args) {
          int mista = 5;
          int mihin = 10;

          tulostaLuvut(mista, mihin);

          mista = 8;

          tulostaLuvut(mista, mihin);
      }

      public static void tulostaLuvut(int mista, int mihin) {
          while (mista &lt; mihin) {
              System.out.println(mista);
              mista++;
          }
      }
  }
<% end %>

<p>
  Ohjelman tulostus on seuraava:
</p>

<% partial 'partials/code_highlight' do %>
  5
  6
  7
  8
  9
  8
  9
<% end %>

<p>
  Alla sama askeleittaisena visualisaationa. Huomaat että main-metodissa olevat arvot jäävät kutsupinoon odottamaan metodin tulostaLuvut suorittamista. Metodissa tulostaLuvut olevien muuttujien arvojen muuttaminen ei muuta metodin main muuttujien arvoja, vaikka ne ovatkin saman nimisiä.
</p>

<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n    public static void main(String[] args) {\n        int mista = 5;\n        int mihin = 10;\n\n        tulostaLuvut(mista, mihin);\n \n        mista = 8;\n\n        tulostaLuvut(mista, mihin);\n    }\n\n    public static void tulostaLuvut(int mista, int mihin) {\n        while (mista < mihin) {\n            System.out.println(mista);\n            mista++;\n        }\n    }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":4,"stack_to_render":[{"func_name":"main:4","encoded_locals":{"mista":5},"ordered_varnames":["mista"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"4","frame_id":4}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":6,"stack_to_render":[{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"call","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"11","frame_id":11},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"12","frame_id":12}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"13","frame_id":13},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"14","frame_id":14}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"21","frame_id":21},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"22","frame_id":22}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"29","frame_id":29},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"30","frame_id":30}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":6,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"31","frame_id":31},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"32","frame_id":32}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":6,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"33","frame_id":33},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"34","frame_id":34}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":6,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"41","frame_id":41},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":6,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"49","frame_id":49},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"50","frame_id":50}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":7,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"51","frame_id":51},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"52","frame_id":52}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":7,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"53","frame_id":53},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"54","frame_id":54}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":7,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"61","frame_id":61},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"62","frame_id":62}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":7,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"69","frame_id":69},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"70","frame_id":70}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"71","frame_id":71},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"72","frame_id":72}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"73","frame_id":73},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"74","frame_id":74}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"81","frame_id":81},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"82","frame_id":82}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"89","frame_id":89},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"90","frame_id":90}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"91","frame_id":91},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"92","frame_id":92}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"93","frame_id":93},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"94","frame_id":94}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"101","frame_id":101},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"102","frame_id":102}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"109","frame_id":109},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"110","frame_id":110}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"111","frame_id":111},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"112","frame_id":112}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"113","frame_id":113},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"114","frame_id":114}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaLuvut:18","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"121","frame_id":121},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"122","frame_id":122}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"return","line":18,"stack_to_render":[{"func_name":"tulostaLuvut:18","encoded_locals":{"mista":10,"mihin":10,"__return__":["VOID"]},"ordered_varnames":["mista","mihin","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"125","frame_id":125},{"func_name":"main:6","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"126","frame_id":126}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":8,"stack_to_render":[{"func_name":"main:8","encoded_locals":{"mista":5,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"127","frame_id":127}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":10,"stack_to_render":[{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"130","frame_id":130}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"call","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"134","frame_id":134},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"135","frame_id":135}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"136","frame_id":136},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"137","frame_id":137}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"144","frame_id":144},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"145","frame_id":145}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"152","frame_id":152},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"153","frame_id":153}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"154","frame_id":154},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"155","frame_id":155}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"156","frame_id":156},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"157","frame_id":157}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n","event":"step_line","line":15,"stack_to_render":[{"func_name":"tulostaLuvut:15","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"164","frame_id":164},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"165","frame_id":165}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":9,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"172","frame_id":172},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"173","frame_id":173}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"step_line","line":16,"stack_to_render":[{"func_name":"tulostaLuvut:16","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"174","frame_id":174},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"175","frame_id":175}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"step_line","line":14,"stack_to_render":[{"func_name":"tulostaLuvut:14","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"176","frame_id":176},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"177","frame_id":177}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaLuvut:18","encoded_locals":{"mista":10,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"184","frame_id":184},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"185","frame_id":185}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"return","line":18,"stack_to_render":[{"func_name":"tulostaLuvut:18","encoded_locals":{"mista":10,"mihin":10,"__return__":["VOID"]},"ordered_varnames":["mista","mihin","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"188","frame_id":188},{"func_name":"main:10","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"189","frame_id":189}],"globals":{},"ordered_globals":[],"func_name":"tulostaLuvut","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{"mista":8,"mihin":10},"ordered_varnames":["mista","mihin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"190","frame_id":190}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"5\n6\n7\n8\n9\n8\n9\n","event":"return","line":11,"stack_to_render":[{"func_name":"main:11","encoded_locals":{"mista":8,"mihin":10,"__return__":["VOID"]},"ordered_varnames":["mista","mihin","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"192","frame_id":192}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>





<% partial 'partials/material_sub_heading' do %>
  Metodi kutsuu toista metodia
<% end %>

<p>
  Metodin sisältä voi kutsua myös muita metodeja. Tehdään metodi <code>kertotaulu</code>, joka tulostaa annetun luvun kertotaulun. Kertotaulu tulostaa rivit metodin <code>tulostaKertotaulunRivi</code> avulla.
</p>

<% partial 'partials/code_highlight' do %>
  public static void kertotaulu(int ylaraja) {
      int luku = 1;

      while (luku &lt;= ylaraja) {
          tulostaKertotaulunRivi(luku, ylaraja);
          luku++;
      }
  }

  public static void tulostaKertotaulunRivi(int luku, int kerroin) {

      int tulostettava = luku;
      while (tulostettava &lt;= luku * kerroin) {
          System.out.print("  " + tulostettava);
          tulostettava += luku;
      }

      System.out.println("");
  }
<% end %>

<p>
  Esimerkiksi metodikutsun <code>kertotaulu(3)</code> tulostus on seuraava.
</p>

<% partial 'partials/sample_output' do %>
  1  2  3
  2  4  6
  3  6  9
<% end %>

<p>
  Alla metodikutsu <code>kertotaulu(3)</code> visualisoituna. Huomaa, miten kutsupinossa on tieto kutsuvan metodin sisäisestä tilasta.
</p>

<div class="code-states-visualizer-widget" data-input='{"code":"public class Esimerkki {\n    public static void main(String[] args) {\n        kertotaulu(3);\n    }\n   \n    public static void kertotaulu(int ylaraja) {\n        int luku = 1;\n    \n        while (luku <= ylaraja) {\n            tulostaKertotaulunRivi(luku, ylaraja);\n            luku++;\n        }\n    }\n\n    public static void tulostaKertotaulunRivi(int luku, int kerroin) {\n    \n        int tulostettava = luku;\n        while (tulostettava <= luku * kerroin) {\n            System.out.print(\"  \" + tulostettava);\n            tulostettava += luku;\n        }\n\n        System.out.println(\"\");\n    }\n}","stdin":"","trace":[{"stdout":"","event":"call","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"1","frame_id":1}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"step_line","line":3,"stack_to_render":[{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"2","frame_id":2}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"","event":"call","line":7,"stack_to_render":[{"func_name":"kertotaulu:7","encoded_locals":{"ylaraja":3},"ordered_varnames":["ylaraja"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"4","frame_id":4},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"5","frame_id":5}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"","event":"step_line","line":7,"stack_to_render":[{"func_name":"kertotaulu:7","encoded_locals":{"ylaraja":3},"ordered_varnames":["ylaraja"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"6","frame_id":6},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"7","frame_id":7}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"","event":"step_line","line":9,"stack_to_render":[{"func_name":"kertotaulu:9","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"12","frame_id":12},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"13","frame_id":13}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"","event":"step_line","line":10,"stack_to_render":[{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"20","frame_id":20},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"21","frame_id":21}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"","event":"call","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":1,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"28","frame_id":28},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"29","frame_id":29},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"30","frame_id":30}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"","event":"step_line","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":1,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"31","frame_id":31},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"32","frame_id":32},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"33","frame_id":33}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":1},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"40","frame_id":40},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"41","frame_id":41},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"42","frame_id":42}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":1},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"58","frame_id":58},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"59","frame_id":59},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"60","frame_id":60}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":1},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"67","frame_id":67},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"68","frame_id":68},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"69","frame_id":69}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"79","frame_id":79},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"80","frame_id":80},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"81","frame_id":81}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"82","frame_id":82},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"83","frame_id":83},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"84","frame_id":84}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"100","frame_id":100},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"101","frame_id":101},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"102","frame_id":102}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"115","frame_id":115},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"116","frame_id":116},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"117","frame_id":117}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"127","frame_id":127},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"128","frame_id":128},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"129","frame_id":129}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"130","frame_id":130},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"131","frame_id":131},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"132","frame_id":132}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"148","frame_id":148},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"149","frame_id":149},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"150","frame_id":150}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"163","frame_id":163},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"164","frame_id":164},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"165","frame_id":165}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"175","frame_id":175},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"176","frame_id":176},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"177","frame_id":177}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"178","frame_id":178},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"179","frame_id":179},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"180","frame_id":180}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3","event":"step_line","line":23,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:23","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"196","frame_id":196},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"197","frame_id":197},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"198","frame_id":198}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"208","frame_id":208},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"209","frame_id":209},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"210","frame_id":210}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"return","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":1,"kerroin":3,"tulostettava":4,"__return__":["VOID"]},"ordered_varnames":["luku","kerroin","tulostettava","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"211","frame_id":211},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"212","frame_id":212},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"213","frame_id":213}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":1},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"214","frame_id":214},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"215","frame_id":215}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"218","frame_id":218},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"219","frame_id":219}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"kertotaulu:9","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"220","frame_id":220},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"221","frame_id":221}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":10,"stack_to_render":[{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"228","frame_id":228},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"229","frame_id":229}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n","event":"call","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":2,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"236","frame_id":236},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"237","frame_id":237},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"238","frame_id":238}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":2,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"239","frame_id":239},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"240","frame_id":240},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"241","frame_id":241}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"248","frame_id":248},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"249","frame_id":249},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"250","frame_id":250}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"266","frame_id":266},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"267","frame_id":267},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"268","frame_id":268}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":2},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"281","frame_id":281},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"282","frame_id":282},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"283","frame_id":283}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"293","frame_id":293},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"294","frame_id":294},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"295","frame_id":295}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"296","frame_id":296},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"297","frame_id":297},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"298","frame_id":298}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"314","frame_id":314},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"315","frame_id":315},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"316","frame_id":316}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":4},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"329","frame_id":329},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"330","frame_id":330},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"331","frame_id":331}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"341","frame_id":341},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"342","frame_id":342},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"343","frame_id":343}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"344","frame_id":344},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"345","frame_id":345},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"346","frame_id":346}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"362","frame_id":362},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"363","frame_id":363},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"364","frame_id":364}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"377","frame_id":377},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"378","frame_id":378},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"379","frame_id":379}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":8},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"389","frame_id":389},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"390","frame_id":390},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"391","frame_id":391}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":8},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"392","frame_id":392},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"393","frame_id":393},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"394","frame_id":394}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6","event":"step_line","line":23,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:23","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":8},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"410","frame_id":410},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"411","frame_id":411},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"412","frame_id":412}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":8},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"422","frame_id":422},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"423","frame_id":423},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"424","frame_id":424}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"return","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":2,"kerroin":3,"tulostettava":8,"__return__":["VOID"]},"ordered_varnames":["luku","kerroin","tulostettava","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"425","frame_id":425},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"426","frame_id":426},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"427","frame_id":427}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":2},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"428","frame_id":428},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"429","frame_id":429}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"432","frame_id":432},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"433","frame_id":433}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"kertotaulu:9","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"434","frame_id":434},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"435","frame_id":435}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":10,"stack_to_render":[{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"442","frame_id":442},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"443","frame_id":443}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"call","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":3,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"450","frame_id":450},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"451","frame_id":451},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"452","frame_id":452}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":17,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:17","encoded_locals":{"luku":3,"kerroin":3},"ordered_varnames":["luku","kerroin"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"453","frame_id":453},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"454","frame_id":454},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"455","frame_id":455}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"462","frame_id":462},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"463","frame_id":463},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"464","frame_id":464}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"480","frame_id":480},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"481","frame_id":481},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"482","frame_id":482}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":3},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"495","frame_id":495},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"496","frame_id":496},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"497","frame_id":497}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"507","frame_id":507},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"508","frame_id":508},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"509","frame_id":509}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"510","frame_id":510},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"511","frame_id":511},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"512","frame_id":512}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"528","frame_id":528},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"529","frame_id":529},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"530","frame_id":530}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":6},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"543","frame_id":543},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"544","frame_id":544},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"545","frame_id":545}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":9},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"555","frame_id":555},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"556","frame_id":556},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"557","frame_id":557}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":9},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"558","frame_id":558},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"559","frame_id":559},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"560","frame_id":560}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6","event":"step_line","line":19,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:19","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":9},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"576","frame_id":576},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"577","frame_id":577},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"578","frame_id":578}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":9},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"591","frame_id":591},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"592","frame_id":592},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"593","frame_id":593}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9","event":"step_line","line":20,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:20","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":12},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"603","frame_id":603},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"604","frame_id":604},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"605","frame_id":605}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9","event":"step_line","line":18,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:18","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":12},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"606","frame_id":606},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"607","frame_id":607},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"608","frame_id":608}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9","event":"step_line","line":23,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:23","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":12},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"624","frame_id":624},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"625","frame_id":625},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"626","frame_id":626}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":12},"ordered_varnames":["luku","kerroin","tulostettava"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"636","frame_id":636},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"637","frame_id":637},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"638","frame_id":638}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"return","line":24,"stack_to_render":[{"func_name":"tulostaKertotaulunRivi:24","encoded_locals":{"luku":3,"kerroin":3,"tulostettava":12,"__return__":["VOID"]},"ordered_varnames":["luku","kerroin","tulostettava","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"639","frame_id":639},{"func_name":"kertotaulu:10","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"640","frame_id":640},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"641","frame_id":641}],"globals":{},"ordered_globals":[],"func_name":"tulostaKertotaulunRivi","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":3},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"642","frame_id":642},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"643","frame_id":643}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":11,"stack_to_render":[{"func_name":"kertotaulu:11","encoded_locals":{"ylaraja":3,"luku":4},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"646","frame_id":646},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"647","frame_id":647}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":9,"stack_to_render":[{"func_name":"kertotaulu:9","encoded_locals":{"ylaraja":3,"luku":4},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"648","frame_id":648},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"649","frame_id":649}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":13,"stack_to_render":[{"func_name":"kertotaulu:13","encoded_locals":{"ylaraja":3,"luku":4},"ordered_varnames":["ylaraja","luku"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"656","frame_id":656},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"657","frame_id":657}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"return","line":13,"stack_to_render":[{"func_name":"kertotaulu:13","encoded_locals":{"ylaraja":3,"luku":4,"__return__":["VOID"]},"ordered_varnames":["ylaraja","luku","__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"660","frame_id":660},{"func_name":"main:3","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":false,"is_zombie":false,"is_parent":false,"unique_hash":"661","frame_id":661}],"globals":{},"ordered_globals":[],"func_name":"kertotaulu","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"step_line","line":4,"stack_to_render":[{"func_name":"main:4","encoded_locals":{},"ordered_varnames":[],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"662","frame_id":662}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}},{"stdout":"  1  2  3\n  2  4  6\n  3  6  9\n","event":"return","line":4,"stack_to_render":[{"func_name":"main:4","encoded_locals":{"__return__":["VOID"]},"ordered_varnames":["__return__"],"parent_frame_id_list":[],"is_highlighted":true,"is_zombie":false,"is_parent":false,"unique_hash":"664","frame_id":664}],"globals":{},"ordered_globals":[],"func_name":"main","heap":{}}],"userlog":"Debugger VM maxMemory: 455M\n"}'></div>



<% partial 'partials/exercise', locals: { name: 'Tulostelua (4 osaa)' } do %>

  <h2>Tähtien tulostus</h2>

  <p>
    Tee metodi <code>tulostaTahtia</code>, joka tulostaa annetun määrän tähtiä ja rivinvaihdon.
  </p>

  <p>
    Tee metodi seuraavaan runkoon:
  </p>

  <% partial 'partials/code_highlight' do %>
public static void tulostaTahtia(int maara) {
    // yhden tähden saat tulostettua komennolla
    // System.out.print("*");
    // kutsu tulostuskomentoa n kertaa
    // tulosta lopuksi rivinvaihto komennolla
    // System.out.println("");
}

public static void main(String[] args) {
    tulostaTahtia(5);
    tulostaTahtia(3);
    tulostaTahtia(9);
}
  <% end %>

  <p>
    Ohjelman tulostus:
  </p>

  <% partial 'partials/sample_output' do %>
*****
***
*********
  <% end %>

  <p>
    <b>huom:</b> moniosaisen tehtävät voi palauttaa palvelimelle (painamalla testausnapin oikealla puolella olevaa nappia) vaikka kaikki osat eivät olisikaan tehty. Palvelin valittelee tällöin tekemättömien osien testeistä, tehdyt osat palvelin kirjaa.
  </p>

  <h2>Neliön tulostus</h2>

  <p>
    Tee metodi <code>tulostaNelio(int sivunpituus)</code> joka tulostaa neliön käyttäen <code>tulostaTahtia</code>-metodia. Siis esimerkiksi kutsu <code>tulostaNelio(4)</code> tulostaa seuraavaa:
  </p>

  <% partial 'partials/sample_output' do %>
****
****
****
****
  <% end %>

  <p>
    <b>Huom: </b> tehtävässä ei riitä että tulostus näyttää oikealta, tulostaNelio-metodin sisällä neliön "rivien" tulostus tulee tehdä tulostaTahtia-metodia käyttäen.
  </p>

  <p>
    Ohjelmaa tehdessäsi kannattaa varmistaa main:iin kirjoitetun testikoodin avulla että metodit toimivat vaaditulla tavalla.
  </p>

  <h2>Suorakulmion tulostus</h2>

  <p>
    Tee metodi <code>tulostaSuorakulmio(int leveys, int korkeus)</code> joka tulostaa suorakulmion käyttäen <code>tulostaTahtia</code>-metodia. Siis esimerkiksi kutsu <code>tulostaSuorakulmio(17,3)</code> tulostaa seuraavaa:
  </p>

  <% partial 'partials/sample_output' do %>
*****************
*****************
*****************
  <% end %>

  <h2>Vasemmalle nojaavan kolmion tulostus</h2>

  <p>
    Tee metodi <code>tulostaKolmio(int koko)</code> joka tulostaa kolmion käyttäen <code>tulostaTahtia</code>-metodia. Siis esimerkiksi kutsu <code>tulostaKolmio(4)</code> tulostaa seuraavaa:
  </p>

  <% partial 'partials/sample_output' do %>
*
**
***
****
  <% end %>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Tulostelua Like A Boss (3 osaa)' } do %>

  <h2>Tähtirivin ja tyhjien tulostus</h2>

  <p>
    Tee metodi <code>tulostaTyhjaa(int maara)</code> joka tulostaa <code>maara</code> kappaletta välilyöntejä. Metodi ei tulosta rivinvaihtoa.
  </p>

  <p>
    Joudut myös joko kopioimaan edellisen tehtävän vastauksestasi metodin <code>tulostaTahtia</code> tai toteuttamaan sen uudelleen tämän tehtävän tehtäväpohjaan.
  </p>

  <h2>Oikealle nojaavan kolmion tulostus</h2>

  <p>
    Tee metodi <code>tulostaKolmio(int koko)</code> joka tulostaa kolmion käyttäen <code>tulostaTyhjaa</code>- ja <code>tulostaTahtia</code>-metodeja. Siis esimerkiksi kutsu <code>tulostaKolmio(4)</code> tulostaa seuraavaa:
  </p>

  <% partial 'partials/sample_output' do %>
   *
  **
 ***
****
  <% end %>

  <h2>Joulukuusen tulostus</h2>

  <p>
    Tee metodi <code>jouluKuusi(int korkeus)</code> joka tulostaa joulukuusen. Joulukuusi koostuu annetun korkuisesta kolmiosta ja jalasta. Jalka on kaksi tähteä korkea ja kolme tähteä leveä ja se on keskellä kolmion pohjaa. Kuusi tulee rakentaa käyttämällä tulostukseen metodeja <code>tulostaTyhjaa</code> ja <code>tulostaTahtia</code>
  </p>

  <p>
    Esimerkiksi kutsu <code>jouluKuusi(4)</code> tulostaa seuraavaa:
  </p>

  <% partial 'partials/sample_output' do %>
   *
  ***
 *****
*******
  ***
  ***
  <% end %>

  <p>
    Kutsu <code>jouluKuusi(10)</code> tulostaa:
  </p>

  <% partial 'partials/sample_output' do %>
         *
        ***
       *****
      *******
     *********
    ***********
   *************
  ***************
 *****************
*******************
        ***
        ***
  <% end %>

  <p>
    <em>Huom:</em> Korkeuksien jotka ovat alle 3 ei tarvitse toimia!
  </p>

<% end %>

<% partial 'partials/exercise', locals: { name: 'Numerovisa (3 osaa)' } do %>

  <p>
    Tässä tehtävässä luodaan seuraavanlainen numerovisa:
  </p>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">73</font>
Luku on pienempi, tehtyjä arvauksia: 1
Arvaa luku: <font color="red">22</font>
Luku on suurempi, tehtyjä arvauksia: 2
Arvaa luku: <font color="red">51</font>
Luku on suurempi, tehtyjä arvauksia: 3
Arvaa luku: <font color="red">62</font>
Luku on suurempi, tehtyjä arvauksia: 4
Arvaa luku: <font color="red">68</font>
Luku on suurempi, tehtyjä arvauksia: 5
Arvaa luku: <font color="red">71</font>
Luku on pienempi, tehtyjä arvauksia: 6
Arvaa luku: <font color="red">70</font>
Onneksi olkoon, oikein arvattu!
  <% end %>

  <h2>Numeron arvaaminen</h2>

  <p>
    Tehtävänannon mukana tulevassa ohjelmassa tulee mukana komento <code>arvoLuku</code>, joka arpoo luvun suljetulta väliltä [0, 100] (0 ja 100 ovat myös mahdollisia). Toteuta ohjelma jossa arvataan arvottua lukua kerran. Ohjelman tulee tulostaa joko "Luku on pienempi", "Luku on suurempi" tai "Onneksi olkoon, oikein arvattu!" riippuen käyttäjän antamasta luvusta.
  </p>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">12</font>
Luku on suurempi
  <% end %>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">66</font>
Luku on pienempi
  <% end %>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">42</font>
Onneksi olkoon, oikein arvattu!
  <% end %>

  <h2>Toistuva arvaaminen</h2>

  <p>
    Lisää ohjelmaan toiminnallisuus jossa arvausta tehdään toistuvasti kunnes käyttäjä syöttää oikean numeron. Huomaa, että sinun tulee arpoa numero komentoa <code>arvoLuku</code> <em>ennen toistolauseketta</em>. Miksi? Mitä tapahtuu, jos luku arvotaan toistolausekkeen sisällä?
  </p>

  <p>
    Alla olevassa esimerkissä kutsu komentoon <code>arvoLuku</code> palautti arvon 83.
  </p>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">55</font>
Luku on suurempi
Arvaa luku: <font color="red">85</font>
Luku on pienempi
Arvaa luku: <font color="red">77</font>
Luku on suurempi
Arvaa luku: <font color="red">81</font>
Luku on suurempi
Arvaa luku: <font color="red">83</font>
Onneksi olkoon, oikein arvattu!
  <% end %>

  <h2>Arvauskertojen laskeminen</h2>

  <p>
    Lisää ohjelmaan kokonaislukutyyppinen muuttuja, jonka avulla pidetään kirjaa tehtyjen arvausten määrästä. Tulosta arvausten määrä aina arvauksen yhteydessä.
  </p>

  <% partial 'partials/sample_output' do %>
Arvaa luku: <font color="red">55</font>
Luku on suurempi, tehtyjä arvauksia: 1
Arvaa luku: <font color="red">85</font>
Luku on pienempi, tehtyjä arvauksia: 2
Arvaa luku: <font color="red">77</font>
Luku on suurempi, tehtyjä arvauksia: 3
Arvaa luku: <font color="red">81</font>
Luku on suurempi, tehtyjä arvauksia: 4
Arvaa luku: <font color="red">83</font>
Onneksi olkoon, oikein arvattu!
  <% end %>

<% end %>


<% partial 'partials/material_heading' do %>
  Yhteenveto
<% end %>

<p>
  Materiaalin toisessa osassa keskityttiin toistolauseen ja muuttujien yhteistoimintaan sekä metodien toimintaan. Arvojen askeleittainen läpikäynti toistolauseen ja muuttujien kanssa esiintyy oikeastaan lähes jokaisessa arkisessa sovelluksessa. Esimerkiksi uutissivustolla näkyvät uutiset tulostetaan näkyville yksi kerrallaan toistolausetta käyttäen, kännykän yhteystiedot tulostetaan näkyville yksi kerrallaan toistolausetta käyttäen ja niin edelleen. Metodeja taas hyödynnetään toistuvien ohjelmakoodien eriyttämiseen sekä ohjelmakoodin ylläpidettävyyden ja luettavuuden parantamiseen. Tämä kaikki tulee kurssilla hiljalleen tutummaksi ja tutummaksi.
</p>

<p>
  Toisen osan yhteenvedossa tarkastelet toistolauseiden ja muuttujien käyttämistä hieman toisenlaisessa kontekstissa. Lähtökohtana ohjelmallemme on graafinen käyttöliittymä, jonka lähdekoodi on kuvattuna alla.
</p>


<% partial 'partials/code_highlight' do %>

  import javafx.application.Application;
  import javafx.scene.Scene;
  import javafx.scene.canvas.Canvas;
  import javafx.scene.canvas.GraphicsContext;
  import javafx.scene.layout.Pane;
  import javafx.stage.Stage;

  // Luokka (ohjelma) Puisevaa "perii" graafisen käyttöliittymän rakentamiseen
  // tarvittavia ominaisuuksia Application-luokalta (ohjelmalta)
  public class Puisevaa extends Application {

      // Käyttöliittymän käynnistäminen kutsuu metodia alla olevaa
      // metodia
      @Override
      public void start(Stage ikkuna) throws Exception {

          // luodaan 640 pikseliä leveä ja 480 pikseliä korkea alusta
          // piirtämiselle ja otetaan alustaan liittyvä piirtoväline
          // käyttöön
          Canvas piirtoalusta = new Canvas(640, 480);
          GraphicsContext piirturi = piirtoalusta.getGraphicsContext2D();

          // kutsutaan piirtämiseen käytettävää metodia piirrä
          // -- metodiin tullaan toteuttamaan piirtotoiminnallisuus
          piirra(piirturi);

          // asetetaan käyttöliittymän osat paikalleen ja
          // näytetään se käyttäjälle
          Pane ruutu = new Pane(piirtoalusta);
          Scene nakyma = new Scene(ruutu);

          ikkuna.setTitle("Niin hyvää puuta!");
          ikkuna.setScene(nakyma);
          ikkuna.show();
      }

      // Ohjelma käynnistetään metodilla public static void main.
      // Metodissa kutsutaan Application luokalta perittyä toiminnallisuutta,
      // joka lopulta suorittaa yllä kuvatun start-metodin
      public static void main(String[] args) {
          launch(Puisevaa.class);
      }

      // Oma piirra-metodimme, jonne toteutetaan piirtotoiminnallisuus
      public static void piirra(GraphicsContext piirturi) {

          // viivan piirtäminen kohdasta (0,0) kohtaan (100, 100)
          piirturi.strokeLine(0, 0, 100, 100);

      }
  }
<% end %>

<p>
  Yllä kuvatun ohjelman käynnistäminen näyttää alla olevassa kuvassa näkyvän ikkunan. Ikkunan otsikko on "Niin hyvää puuta!" ja ikkunassa näkyy piirretty viiva. Tietokoneohjelmissa piirtäminen tapahtuu siten, että origo eli piste (0, 0) on ikkunan vasemmassa yläkulmassa, ja y-koordinaatti kasvaa alaspäin mennessä.
</p>

<img src="/img/puuta/ikkuna-ja-viiva.png" alt="Ikkunan otsikko on 'Niin hyvää puuta!' ja ikkunassa näkyy piirretty viiva."/>

<p>
  &nbsp;
</p>

<p>
  Metodin <code>public static void piirra(GraphicsContext piirturi)</code> parametrina saama piirturi on kytketty ohjelman ikkunaan. Kaikki piirturin piirtokomennot siis piirtävät ikkunaan.
</p>

<p>
  Oleellisia komennot tällä hetkellä ovat seuraavat:
</p>

<ul>

  <li>
    <code>piirturi.strokeLine(int mistaX, int mistaY, int mihinX, int mihinY)</code> piirtää viivan kohdasta (mistaX, mistaY) kohtaan (mihinX, mihinY).
  </li>

  <li>
    <code>piirturi.strokeRect(int mistaX, int mistaY, int leveys, int korkeus)</code> piirtää suorakulmion, jonka leveys on <code>leveys</code> ja korkeus on <code>korkeus</code>. Suorakulmion vasen yläkulma on pisteessä (mistaX, mistaY).
  </li>

  <li>
    <code>piirturi.strokeOval(int mistaX, int mistaY, int leveys, int korkeus)</code> piirtää ovaalin, jonka leveys on <code>leveys</code> ja korkeus on <code>korkeus</code>. Pienimmän mahdollisimman suorakulmion, joka rajaa ovaalin, vasen yläkulma on pisteessä (mistaX, mistaY)
  </li>

</ul>

<p>
  Alla olevassa esimerkissä on käytetty jokaista komentoa.
</p>

<% partial 'partials/code_highlight' do %>
  // Oma piirra-metodimme, jonne toteutetaan piirtotoiminnallisuus
  public static void piirra(GraphicsContext piirturi) {

      piirturi.strokeLine(0, 0, 300, 300);
      piirturi.strokeRect(0, 0, 300, 300);
      piirturi.strokeOval(0, 0, 300, 300);

  }

<% end %>

<img src="/img/puuta/komennot.png" alt="Ikkunaan on piirretty viiva, suorakulmio sekä ovaali."/>

<p>
  &nbsp;
</p>

<p>
  Voimme hyödyntää piirtämisessä myös toistolauseita. Alla on hahmoa toistetaan 10 kertaa.
</p>

<% partial 'partials/code_highlight' do %>

  // Oma piirra-metodimme, jonne toteutetaan piirtotoiminnallisuus
  public static void piirra(GraphicsContext piirturi) {

      int kerta = 0;
      int leveys = 40;
      int korkeus = 30;

      while (kerta &lt; 10) {

          piirturi.strokeLine(kerta * leveys, kerta * korkeus, (kerta + 1) * leveys, (kerta + 1) * korkeus);
          piirturi.strokeRect(kerta * leveys, kerta * korkeus, leveys, korkeus);
          piirturi.strokeOval(kerta * leveys, kerta * korkeus, leveys, korkeus);

          kerta++;
      }

  }

<% end %>


<img src="/img/puuta/toisto.png" alt="Toistuva hahmo."/>

<p>
  &nbsp;
</p>

<% partial 'partials/exercise', locals: { name: 'Puisevaa' } do %>

  <p>
    Tässä tehtävässä tavoitteenasi on luoda ohjelma, joka piirtää käyttäjälle näytettävään ikkunaan alla kuvatun puujonon.
  </p>

  <img src="/img/puuta/puisevaa.png" alt="Viisi puuta rinnakkain"/>

  <p>
    &nbsp;
  </p>

  <p>
    Toteuta toiminnallisuus tehtäväpohjassa olevaan metodiin <code>piirra</code> -- voit myös kokeilla omien metodiesi luomista.
  </p>

  <p>
    Tehtävään ei ole automaattisia testejä. Kun olet saanut puujonon luotua, palauta tehtävä.
  </p>

<% end %>

<%= partial 'partials/quiz', locals: { id: '5a57bcce574f0b000439a32f' } %>


